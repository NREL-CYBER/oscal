/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
import { AnnotatedProperty, BackMatter, Component, ComponentUniversallyUniqueIdentifierReference, ImportSystemSecurityPlan, InventoryItem, Link, Property, PublicationMetadata, Remarks, SystemIdentification } from "../shared";
import { AssociatedRisk, IdentifiedRisk, IdentifiesTheSubject, Origin } from "../shared/IdentifiedRisk";
import { RelatedObservation } from "../shared/Observation";
import { DescriptionOfRequiredAsset, TitleForRequiredAsset } from "../shared/Task";
/**
 * Uniquely identifies this POA&M. This UUID must be changed each time the content of the POA&M changes.
 */
export declare type POAMUniversallyUniqueIdentifier = string;
/**
 * Uniquely identifies this observation. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given observation across revisions.
 */
export declare type ObservationUniversallyUniqueIdentifier = string;
/**
 * The title for this observation.
 */
export declare type ObservationTitle = string;
/**
 * A human_readable description of this assessment observation.
 */
export declare type ObservatonDescription = string;
/**
 * Identifies how the observation was made.
 */
export declare type ObservationMethod = string;
/**
 * Identifies the nature of the observation. More than one may be used to further qualify and enable filtering.
 */
export declare type ObservationType = string;
/**
 * The kind of actor.
 */
export declare type ActorType = "tool" | "assessment_platform" | "party";
/**
 * A pointer to the tool or person based on the associated type.
 */
export declare type ActorUUIDReference = string;
/**
 * For a party, this can optionally be used to specify the role the actor was performing.
 */
export declare type ActorRole = string;
/**
 * The title or name for the referenced subject.
 */
export declare type SubjectReferenceTitle = string;
/**
 * >A resolvable URL reference to relevant evidence.
 */
export declare type RelevantEvidenceReference = string;
/**
 * A human_readable description of this evidence.
 */
export declare type RelevantEvidenceDescription = string;
/**
 * Uniquely identifies this risk. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given risk across revisions.
 */
export declare type RiskUniversallyUniqueIdentifier = string;
/**
 * The title for this risk.
 */
export declare type RiskTitle = string;
/**
 * A human_readable summary of what was identified regarding the risk.
 */
export declare type RiskDescription = string;
/**
 * An summary of impact for how the risk affects the system.
 */
export declare type RiskStatement = string;
/**
 * Specifies the source of the threat information.
 */
export declare type ThreatTypeIdentificationSystem = string;
/**
 * An optional location for the threat data, from which this ID originates.
 */
export declare type ThreatInformationResourceReference = string;
/**
 * The name of the risk metric within the specified system.
 */
export declare type FacetName = string;
/**
 * Specifies the naming system under which this risk metric is organized, which allows for the same names to be used in different systems controlled by different parties. This avoids the potential of a name clash.
 */
export declare type NamingSystem = string;
/**
 * Indicates the value of the facet.
 */
export declare type FacetValue = string;
/**
 * Uniquely identifies this mitigating factor. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given mitigating factor across revisions.
 */
export declare type MitigatingFactorUniversallyUniqueIdentifier = string;
/**
 * Points to an implementation statement in the SSP.
 */
export declare type ImplementationUUID = string;
/**
 * A human_readable description of this mitigating factor.
 */
export declare type MitigatingFactorDescription = string;
/**
 * Uniquely identifies this required asset. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. Once assigned, a UUID should be consistantly used for a given required asset across revisions.
 */
export declare type RequiredUniversallyUniqueIdentifier = string;
/**
 * A pointer to the party who is making the log entry.
 */
export declare type PartyUUIDReference = string;
/**
 * A point to the role_id of the role in which the party is making the log entry.
 */
export declare type LogActorRole = string;
/**
 * Uniquely identifies the POA&M entry. This UUID may be referenced elsewhere in an OSCAL document when refering to this information. A UUID should be consistantly used for a given POA&M item across revisions of the document.
 */
export declare type POAMItemUniversallyUniqueIdentifier = string;
/**
 * The title or name for this POA&M item .
 */
export declare type POAMItemTitle = string;
/**
 * A human_readable description of POA&M item.
 */
export declare type POAMItemDescription = string;
/**
 * Date/time stamp identifying when the finding information was collected.
 */
export declare type CollectedField = string;
/**
 * Date/time identifying when the finding information is out_of_date and no longer valid. Typically used with continuous assessment scenarios.
 */
export declare type ExpiresField = string;
/**
 * A plan of action and milestones which identifies initial and residual risks, deviations, and disposition, such as those required by FedRAMP.
 */
export interface PlanOfActionAndMilestones {
    uuid: POAMUniversallyUniqueIdentifier;
    metadata: PublicationMetadata;
    import_ssp?: ImportSystemSecurityPlan;
    system_id?: SystemIdentification;
    local_definitions?: PoamLocalDefinitions;
    observations?: Objective[];
    risks?: IdentifiedRisk[];
    poam_items: POAMItem[];
    back_matter?: BackMatter;
}
/**
 * Allows components, and inventory_items to be defined within the POA&M for circumstances where no OSCAL_based SSP exists, or is not delivered with the POA&M.
 */
export interface PoamLocalDefinitions {
    components?: Record<ComponentUniversallyUniqueIdentifierReference, Component>;
    inventory_items?: InventoryItem[];
    remarks?: Remarks;
}
/**
 * Describes an individual observation.
 */
export interface Objective {
    uuid: ObservationUniversallyUniqueIdentifier;
    title?: ObservationTitle;
    description: ObservatonDescription;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    methods: ObservationMethod[];
    types?: ObservationType[];
    origins?: Origin[];
    subjects?: IdentifiesTheSubject[];
    relevant_evidence?: RelevantEvidence[];
    remarks?: Remarks;
}
/**
 * Links this observation to relevant evidence.
 */
export interface RelevantEvidence {
    href?: RelevantEvidenceReference;
    description: RelevantEvidenceDescription;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    remarks?: Remarks;
}
/**
 * A pointer, by ID, to an externally_defined threat.
 */
export interface ThreatID {
    system: ThreatTypeIdentificationSystem;
    href?: ThreatInformationResourceReference;
    id: string;
}
/**
 * A collection of descriptive data about the containing object from a specific origin.
 */
export interface Characterization {
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    origin: Origin;
    facets: [Facet, ...Facet[]];
}
/**
 * An individual characteristic that is part of a larger set produced by the same actor.
 */
export interface Facet {
    name: FacetName;
    system: NamingSystem;
    value: FacetValue;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    remarks?: Remarks;
}
/**
 * Describes an existing mitigating factor that may affect the overall determination of the risk, with an optional link to an implementation statement in the SSP.
 */
export interface MitigatingFactor {
    uuid: MitigatingFactorUniversallyUniqueIdentifier;
    implementation_uuid?: ImplementationUUID;
    description: MitigatingFactorDescription;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    subjects?: IdentifiesTheSubject[];
}
/**
 * Identifies an asset required to achieve remediation.
 */
export interface RequiredAsset {
    uuid: RequiredUniversallyUniqueIdentifier;
    subjects?: IdentifiesTheSubject[];
    title?: TitleForRequiredAsset;
    description: DescriptionOfRequiredAsset;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    remarks?: Remarks;
}
/**
 * Used to indicate who created a log entry in what role.
 */
export interface LoggedBy {
    party_uuid: PartyUUIDReference;
    role_id?: LogActorRole;
}
/**
 * Describes an individual POA&M item.
 */
export interface POAMItem {
    uuid?: POAMItemUniversallyUniqueIdentifier;
    title: POAMItemTitle;
    description: POAMItemDescription;
    props?: Property[];
    annotations?: AnnotatedProperty[];
    links?: Link[];
    origins?: Origin[];
    collected: CollectedField;
    expires?: ExpiresField;
    related_observations?: RelatedObservation[];
    related_risks?: AssociatedRisk[];
    remarks?: Remarks;
}
