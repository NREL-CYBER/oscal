"""
Identifies an assessment or related process that can be performed. In the
assessment plan, this is an intended activity which may be associated with an
assessment task. In the assessment results, this an activity that was actually
performed as part of an assessment.
"""
type Activity {
  """
  Uniquely identifies this assessment activity. This UUID may be referenced
  elsewhere in an OSCAL document when referring to this information. A UUID
  should be consistently used for a given included activity across revisions of the document.
  """
  uuid: String!

  """The title for this included activity."""
  title: String

  """A description of this included activity."""
  description: String!
  props: [Property!]
  links: [Link!]
  steps: [ActivityStepsItem!]
  related_controls: ReviewedControls
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""
Identifies an assessment or related process that can be performed. In the
assessment plan, this is an intended activity which may be associated with an
assessment task. In the assessment results, this an activity that was actually
performed as part of an assessment.
"""
input ActivityIn {
  """
  Uniquely identifies this assessment activity. This UUID may be referenced
  elsewhere in an OSCAL document when referring to this information. A UUID
  should be consistently used for a given included activity across revisions of the document.
  """
  uuid: String!

  """The title for this included activity."""
  title: String

  """A description of this included activity."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  steps: [ActivityStepsItemIn!]
  related_controls: ReviewedControlsIn
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""
Identifies an individual step in a series of steps related to an activity, such
as an assessment test or examination procedure.
"""
type ActivityStepsItem {
  """
  Uniquely identifies a step. This UUID may be referenced elsewhere in an OSCAL
  document when referring to this step. A UUID should be consistently used for a
  given test step across revisions of the document.
  """
  uuid: String!

  """The title for this step."""
  title: String

  """A description of this step."""
  description: String!
  props: [Property!]
  links: [Link!]
  reviewed_controls: ReviewedControls
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""
Identifies an individual step in a series of steps related to an activity, such
as an assessment test or examination procedure.
"""
input ActivityStepsItemIn {
  """
  Uniquely identifies a step. This UUID may be referenced elsewhere in an OSCAL
  document when referring to this step. A UUID should be consistently used for a
  given test step across revisions of the document.
  """
  uuid: String!

  """The title for this step."""
  title: String

  """A description of this step."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  reviewed_controls: ReviewedControlsIn
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""Specifies contents to be added into controls, in resolution"""
type Add {
  """
  Where to add the new content with respect to the targeted element (beside it or inside it)
  """
  position: AddPosition

  """Target location of the addition."""
  by_id: String

  """
  A name given to the control, which may be used by a tool for display and navigation.
  """
  title: String
  params: [Parameter!]
  props: [Property!]
  links: [Link!]
  parts: [Part!]
}

"""Specifies contents to be added into controls, in resolution"""
input AddIn {
  """
  Where to add the new content with respect to the targeted element (beside it or inside it)
  """
  position: AddPosition

  """Target location of the addition."""
  by_id: String

  """
  A name given to the control, which may be used by a tool for display and navigation.
  """
  title: String
  params: [ParameterIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  parts: [PartIn!]
}

enum AddPosition {
  before
  after
  starting
  ending
}

"""A postal address for the location."""
type Address {
  """Indicates the type of address."""
  type: String
  addr_lines: [String!]

  """City, town or geographical region for the mailing address."""
  city: String

  """State, province or analogous geographical region for mailing address"""
  state: String

  """Postal or ZIP code for mailing address"""
  postal_code: String

  """The ISO 3166_1 alpha_2 country code for the mailing address."""
  country: String
}

"""A postal address for the location."""
input AddressIn {
  """Indicates the type of address."""
  type: String
  addr_lines: [String!]

  """City, town or geographical region for the mailing address."""
  city: String

  """State, province or analogous geographical region for mailing address"""
  state: String

  """Postal or ZIP code for mailing address"""
  postal_code: String

  """The ISO 3166_1 alpha_2 country code for the mailing address."""
  country: String
}

"""
An Alter element specifies changes to be made to an included control when a profile is resolved.
"""
type Alter {
  """A reference to a control with a corresponding id value."""
  control_id: String
  removes: [Remove!]
  adds: [Add!]
}

"""
An Alter element specifies changes to be made to an included control when a profile is resolved.
"""
input AlterIn {
  """A reference to a control with a corresponding id value."""
  control_id: String
  removes: [RemoveIn!]
  adds: [AddIn!]
}

"""
Identifies the assets used to perform this assessment, such as the assessment team, scanning tools, and assumptions.
"""
type AssessmentAssets {
  components: [SystemComponent!]
  assessment_platforms: [AssessmentPlatform!]!
}

"""
Identifies the assets used to perform this assessment, such as the assessment team, scanning tools, and assumptions.
"""
input AssessmentAssetsIn {
  components: [SystemComponentIn!]
  assessment_platforms: [AssessmentPlatformIn!]!
}

"""
A local definition of a control objective. Uses catalog syntax for control objective and assessment activities.
"""
type AssessmentMethod {
  """
  Uniquely identifies this defined assessment method. This UUID may be
  referenced elsewhere in an OSCAL document when referring to this information.
  A UUID should be consistently used for a given assessment method across
  revisions of the document.
  """
  uuid: String!

  """A description of this assessment method."""
  description: String
  props: [Property!]
  links: [Link!]
  part: AssessmentPart!
  remarks: String
}

"""
A local definition of a control objective. Uses catalog syntax for control objective and assessment activities.
"""
input AssessmentMethodIn {
  """
  Uniquely identifies this defined assessment method. This UUID may be
  referenced elsewhere in an OSCAL document when referring to this information.
  A UUID should be consistently used for a given assessment method across
  revisions of the document.
  """
  uuid: String!

  """A description of this assessment method."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  part: AssessmentPartIn!
  remarks: String
}

"""
A partition of an assessment plan or results or a child of another part.
"""
type AssessmentPart {
  """
  A unique identifier for a specific part instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same part across
  minor revisions of the document.
  """
  uuid: String

  """A textual label that uniquely identifies the part's semantic type."""
  name: String!

  """
  A namespace qualifying the part's name. This allows different organizations to
  associate distinct semantics with the same name.
  """
  ns: String

  """
  A textual label that provides a sub_type or characterization of the part's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple parts of the same control with the same name and ns.
  """
  class: String

  """
  A name given to the part, which may be used by a tool for display and navigation.
  """
  title: String
  props: [Property!]

  """Permits multiple paragraphs, lists, tables etc."""
  prose: String
  parts: [AssessmentPart!]
  links: [Link!]
}

"""
A partition of an assessment plan or results or a child of another part.
"""
input AssessmentPartIn {
  """
  A unique identifier for a specific part instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same part across
  minor revisions of the document.
  """
  uuid: String

  """A textual label that uniquely identifies the part's semantic type."""
  name: String!

  """
  A namespace qualifying the part's name. This allows different organizations to
  associate distinct semantics with the same name.
  """
  ns: String

  """
  A textual label that provides a sub_type or characterization of the part's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple parts of the same control with the same name and ns.
  """
  class: String

  """
  A name given to the part, which may be used by a tool for display and navigation.
  """
  title: String
  props: [PropertyIn!]

  """Permits multiple paragraphs, lists, tables etc."""
  prose: String
  parts: [AssessmentPartIn!]
  links: [LinkIn!]
}

"""An assessment plan, such as those provided by a FedRAMP assessor."""
type AssessmentPlan {
  """
  Uniquely identifies this assessment plan. This UUID must be changed each time the content of the plan changes.
  """
  uuid: String!
  metadata: Metadata!
  import_ssp: ImportSsp!

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: AssessmentPlanLocals

  """
  Used to define various terms and conditions under which an assessment,
  described by the plan, can be performed. Each child part defines a different
  type of term or condition.
  """
  terms_and_conditions: AssessmentPlanTermsAndConditions
  reviewed_controls: ReviewedControls!
  assessment_subjects: [AssessmentSubject!]
  assessment_assets: AssessmentAssets
  tasks: [Task!]
  back_matter: BackMatter
}

"""An assessment plan, such as those provided by a FedRAMP assessor."""
input AssessmentPlanIn {
  """
  Uniquely identifies this assessment plan. This UUID must be changed each time the content of the plan changes.
  """
  uuid: String!
  metadata: MetadataIn!
  import_ssp: ImportSspIn!

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: AssessmentPlanLocalsIn

  """
  Used to define various terms and conditions under which an assessment,
  described by the plan, can be performed. Each child part defines a different
  type of term or condition.
  """
  terms_and_conditions: AssessmentPlanTermsAndConditionsIn
  reviewed_controls: ReviewedControlsIn!
  assessment_subjects: [AssessmentSubjectIn!]
  assessment_assets: AssessmentAssetsIn
  tasks: [TaskIn!]
  back_matter: BackMatterIn
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
type AssessmentPlanLocals {
  components: [SystemComponent!]
  inventory_items: [InventoryItem!]
  users: [SystemUser!]
  objectives_and_methods: [LocalObjective!]
  activities: [Activity!]
  remarks: String
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
input AssessmentPlanLocalsIn {
  components: [SystemComponentIn!]
  inventory_items: [InventoryItemIn!]
  users: [SystemUserIn!]
  objectives_and_methods: [LocalObjectiveIn!]
  activities: [ActivityIn!]
  remarks: String
}

"""
Used to define various terms and conditions under which an assessment, described
by the plan, can be performed. Each child part defines a different type of term or condition.
"""
type AssessmentPlanTermsAndConditions {
  parts: [AssessmentPart!]
}

"""
Used to define various terms and conditions under which an assessment, described
by the plan, can be performed. Each child part defines a different type of term or condition.
"""
input AssessmentPlanTermsAndConditionsIn {
  parts: [AssessmentPartIn!]
}

"""
Used to represent the toolset used to perform aspects of the assessment.
"""
type AssessmentPlatform {
  """Uniquely identifies this assessment Platform."""
  uuid: String!

  """The title or name for the assessment platform."""
  title: String
  props: [Property!]
  links: [Link!]
  uses_components: [AssessmentPlatformUsesComponentsItem!]
  remarks: String
}

"""
Used to represent the toolset used to perform aspects of the assessment.
"""
input AssessmentPlatformIn {
  """Uniquely identifies this assessment Platform."""
  uuid: String!

  """The title or name for the assessment platform."""
  title: String
  props: [PropertyIn!]
  links: [LinkIn!]
  uses_components: [AssessmentPlatformUsesComponentsItemIn!]
  remarks: String
}

"""The set of components that are used by the assessment platform."""
type AssessmentPlatformUsesComponentsItem {
  """
  A reference to a component that is implemented as part of an inventory item.
  """
  component_uuid: String!
  props: [Property!]
  links: [Link!]
  responsible_parties: [ResponsibleParty!]
  remarks: String
}

"""The set of components that are used by the assessment platform."""
input AssessmentPlatformUsesComponentsItemIn {
  """
  A reference to a component that is implemented as part of an inventory item.
  """
  component_uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_parties: [ResponsiblePartyIn!]
  remarks: String
}

"""
Security assessment results, such as those provided by a FedRAMP assessor in the FedRAMP Security Assessment Report.
"""
type AssessmentResults {
  """
  Uniquely identifies this assessment results file. This UUID must be changed each time the content of the results changes.
  """
  uuid: String!
  metadata: Metadata!
  import_ap: ImportAp!

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: AssessmentResultsLocals
  results: [Result!]!
  back_matter: BackMatter
}

"""
Security assessment results, such as those provided by a FedRAMP assessor in the FedRAMP Security Assessment Report.
"""
input AssessmentResultsIn {
  """
  Uniquely identifies this assessment results file. This UUID must be changed each time the content of the results changes.
  """
  uuid: String!
  metadata: MetadataIn!
  import_ap: ImportApIn!

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: AssessmentResultsLocalsIn
  results: [ResultIn!]!
  back_matter: BackMatterIn
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
type AssessmentResultsLocals {
  objectives_and_methods: [LocalObjective!]
  activities: [Activity!]
  remarks: String
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
input AssessmentResultsLocalsIn {
  objectives_and_methods: [LocalObjectiveIn!]
  activities: [ActivityIn!]
  remarks: String
}

"""
Identifies system elements being assessed, such as components, inventory items,
and locations. In the assessment plan, this identifies a planned assessment
subject. In the assessment results this is an actual assessment subject, and
reflects any changes from the plan. exactly what will be the focus of this
assessment. Any subjects not identified in this way are out_of_scope.
"""
type AssessmentSubject {
  """
  Indicates the type of assessment subject, such as a component, inventory,
  item, location, or party represented by this selection statement.
  """
  type: String!

  """
  A description of the collection of subjects being included in this assessment.
  """
  description: String
  props: [Property!]
  links: [Link!]

  """A key word to indicate all."""
  include_all: AssessmentSubjectIncludeAll
  include_subjects: [SelectSubjectById!]
  exclude_subjects: [SelectSubjectById!]
  remarks: String
}

"""
Identifies system elements being assessed, such as components, inventory items,
and locations. In the assessment plan, this identifies a planned assessment
subject. In the assessment results this is an actual assessment subject, and
reflects any changes from the plan. exactly what will be the focus of this
assessment. Any subjects not identified in this way are out_of_scope.
"""
input AssessmentSubjectIn {
  """
  Indicates the type of assessment subject, such as a component, inventory,
  item, location, or party represented by this selection statement.
  """
  type: String!

  """
  A description of the collection of subjects being included in this assessment.
  """
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """A key word to indicate all."""
  include_all: AssessmentSubjectIncludeAllIn
  include_subjects: [SelectSubjectByIdIn!]
  exclude_subjects: [SelectSubjectByIdIn!]
  remarks: String
}

"""A key word to indicate all."""
type AssessmentSubjectIncludeAll {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""A key word to indicate all."""
input AssessmentSubjectIncludeAllIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""
Used when the assessment subjects will be determined as part of one or more
other assessment activities. These assessment subjects will be recorded in the
assessment results in the assessment log.
"""
type AssessmentSubjectPlaceholder {
  """
  Uniquely identifies a set of assessment subjects that will be identified by a task or an activity that is part of a task.
  """
  uuid: String!

  """
  A description of intent of this assessment subject placeholder.
  """
  description: String
  sources: [AssessmentSubjectPlaceholderSourcesItem!]!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
Used when the assessment subjects will be determined as part of one or more
other assessment activities. These assessment subjects will be recorded in the
assessment results in the assessment log.
"""
input AssessmentSubjectPlaceholderIn {
  """
  Uniquely identifies a set of assessment subjects that will be identified by a task or an activity that is part of a task.
  """
  uuid: String!

  """
  A description of intent of this assessment subject placeholder.
  """
  description: String
  sources: [AssessmentSubjectPlaceholderSourcesItemIn!]!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
Assessment subjects will be identified while conducting the referenced activity_instance.
"""
type AssessmentSubjectPlaceholderSourcesItem {
  """
  Uniquely identifies an assessment activity to be performed as part of the
  event. This UUID may be referenced elsewhere in an OSCAL document when
  referring to this information. A UUID should be consistently used for this
  schedule across revisions of the document.
  """
  task_uuid: String!
}

"""
Assessment subjects will be identified while conducting the referenced activity_instance.
"""
input AssessmentSubjectPlaceholderSourcesItemIn {
  """
  Uniquely identifies an assessment activity to be performed as part of the
  event. This UUID may be referenced elsewhere in an OSCAL document when
  referring to this information. A UUID should be consistently used for this
  schedule across revisions of the document.
  """
  task_uuid: String!
}

"""
A description of this system's authorization boundary, optionally supplemented
by diagrams that illustrate the authorization boundary.
"""
type AuthorizationBoundary {
  """A summary of the system's authorization boundary."""
  description: String!
  props: [Property!]
  links: [Link!]
  diagrams: [Diagram!]

  """
  Commentary about the system's authorization boundary that enhances the diagram.
  """
  remarks: String
}

"""
A description of this system's authorization boundary, optionally supplemented
by diagrams that illustrate the authorization boundary.
"""
input AuthorizationBoundaryIn {
  """A summary of the system's authorization boundary."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  diagrams: [DiagramIn!]

  """
  Commentary about the system's authorization boundary that enhances the diagram.
  """
  remarks: String
}

"""
Identifies a specific system privilege held by the user, along with an
associated description and/or rationale for the privilege.
"""
type AuthorizedPrivilege {
  """A human readable name for the privilege."""
  title: String!

  """A summary of the privilege's purpose within the system."""
  description: String
  functions_performed: [String!]!
}

"""
Identifies a specific system privilege held by the user, along with an
associated description and/or rationale for the privilege.
"""
input AuthorizedPrivilegeIn {
  """A human readable name for the privilege."""
  title: String!

  """A summary of the privilege's purpose within the system."""
  description: String
  functions_performed: [String!]!
}

"""
A collection of resources, which may be included directly or by reference.
"""
type BackMatter {
  resources: [Resource!]
}

"""
A collection of resources, which may be included directly or by reference.
"""
input BackMatterIn {
  resources: [ResourceIn!]
}

"""Defines how the referenced component implements a set of controls."""
type ByComponent {
  """
  A reference to the component that is implementing a given control or control statement.
  """
  component_uuid: String!

  """
  A globally unique identifier that can be used to reference this by_component
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """
  An implementation statement that describes how a control or a control
  statement is implemented within the referenced system component.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  set_parameters: [SetParameter!]
  implementation_status: ImplementationStatus

  """
  Identifies content intended for external consumption, such as with leveraged organizations.
  """
  export: ByComponentExport
  inherited: [ByComponentInheritedItem!]
  satisfied: [ByComponentSatisfiedItem!]
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""
Identifies content intended for external consumption, such as with leveraged organizations.
"""
type ByComponentExport {
  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that can be available to another system
  leveraging this system.
  """
  description: String
  props: [Property!]
  links: [Link!]
  provided: [ByComponentExportProvidedItem!]
  responsibilities: [ByComponentExportResponsibilitiesItem!]
  remarks: String
}

"""
Identifies content intended for external consumption, such as with leveraged organizations.
"""
input ByComponentExportIn {
  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that can be available to another system
  leveraging this system.
  """
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  provided: [ByComponentExportProvidedItemIn!]
  responsibilities: [ByComponentExportResponsibilitiesItemIn!]
  remarks: String
}

"""Describes a capability which may be inherited by a leveraging system."""
type ByComponentExportProvidedItem {
  """
  A globally unique identifier that can be used to reference this provided entry
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  resource across revisions of the document.
  """
  uuid: String!

  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that can be provided to another system
  leveraging this system.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""Describes a capability which may be inherited by a leveraging system."""
input ByComponentExportProvidedItemIn {
  """
  A globally unique identifier that can be used to reference this provided entry
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  resource across revisions of the document.
  """
  uuid: String!

  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that can be provided to another system
  leveraging this system.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""
Describes a control implementation responsibility imposed on a leveraging system.
"""
type ByComponentExportResponsibilitiesItem {
  """
  A globally unique identifier that can be used to reference this responsibility
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  provided_uuid: String

  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that a leveraging system must implement to
  satisfy the control provided by a leveraged system.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""
Describes a control implementation responsibility imposed on a leveraging system.
"""
input ByComponentExportResponsibilitiesItemIn {
  """
  A globally unique identifier that can be used to reference this responsibility
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  provided_uuid: String

  """
  An implementation statement that describes the aspects of the control or
  control statement implementation that a leveraging system must implement to
  satisfy the control provided by a leveraged system.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""Defines how the referenced component implements a set of controls."""
input ByComponentIn {
  """
  A reference to the component that is implementing a given control or control statement.
  """
  component_uuid: String!

  """
  A globally unique identifier that can be used to reference this by_component
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """
  An implementation statement that describes how a control or a control
  statement is implemented within the referenced system component.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  set_parameters: [SetParameterIn!]
  implementation_status: ImplementationStatusIn

  """
  Identifies content intended for external consumption, such as with leveraged organizations.
  """
  export: ByComponentExportIn
  inherited: [ByComponentInheritedItemIn!]
  satisfied: [ByComponentSatisfiedItemIn!]
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""Describes a control implementation inherited by a leveraging system."""
type ByComponentInheritedItem {
  """
  A globally unique identifier that can be used to reference this inherited
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  provided_uuid: String

  """
  An implementation statement that describes the aspects of a control or control
  statement implementation that a leveraging system is inheriting from a
  leveraged system.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
}

"""Describes a control implementation inherited by a leveraging system."""
input ByComponentInheritedItemIn {
  """
  A globally unique identifier that can be used to reference this inherited
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  provided_uuid: String

  """
  An implementation statement that describes the aspects of a control or control
  statement implementation that a leveraging system is inheriting from a
  leveraged system.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
}

"""
Describes how this system satisfies a responsibility imposed by a leveraged system.
"""
type ByComponentSatisfiedItem {
  """
  A globally unique identifier that can be used to reference this satisfied
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  responsibility_uuid: String

  """
  An implementation statement that describes the aspects of a control or control
  statement implementation that a leveraging system is implementing based on a
  requirement from a leveraged system.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""
Describes how this system satisfies a responsibility imposed by a leveraged system.
"""
input ByComponentSatisfiedItemIn {
  """
  A globally unique identifier that can be used to reference this satisfied
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """Identifies a 'provided' assembly associated with this assembly."""
  responsibility_uuid: String

  """
  An implementation statement that describes the aspects of a control or control
  statement implementation that a leveraging system is implementing based on a
  requirement from a leveraged system.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""Call a control by its ID"""
type Call {
  """
  When a control is included, whether its child (dependent) controls are also included.
  """
  with_child_controls: CallWithChildControls
  with_ids: [String!]
  matching: [CallMatchingItem!]
}

"""Call a control by its ID"""
input CallIn {
  """
  When a control is included, whether its child (dependent) controls are also included.
  """
  with_child_controls: CallWithChildControls
  with_ids: [String!]
  matching: [CallMatchingItemIn!]
}

"""Select controls by (regular expression) match on ID"""
type CallMatchingItem {
  """
  A glob expression matching the IDs of one or more controls to be selected.
  """
  pattern: String
}

"""Select controls by (regular expression) match on ID"""
input CallMatchingItemIn {
  """
  A glob expression matching the IDs of one or more controls to be selected.
  """
  pattern: String
}

enum CallWithChildControls {
  yes
  no
}

"""A grouping of other components and/or capabilities."""
type Capability {
  """A unique identifier for a capability."""
  uuid: String!

  """The capability's name."""
  name: String!

  """A summary of the capability."""
  description: String!
  props: [Property!]
  links: [Link!]
  incorporates_components: [IncorporatesComponent!]
  control_implementations: [ControlImplementation!]
  remarks: String
}

"""A grouping of other components and/or capabilities."""
input CapabilityIn {
  """A unique identifier for a capability."""
  uuid: String!

  """The capability's name."""
  name: String!

  """A summary of the capability."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  incorporates_components: [IncorporatesComponentIn!]
  control_implementations: [ControlImplementationIn!]
  remarks: String
}

"""A collection of controls."""
type Catalog {
  """
  A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: Metadata!
  params: [Parameter!]
  controls: [Control!]
  groups: [Group!]
  back_matter: BackMatter
}

"""A collection of controls."""
input CatalogIn {
  """
  A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: MetadataIn!
  params: [ParameterIn!]
  controls: [ControlIn!]
  groups: [GroupIn!]
  back_matter: BackMatterIn
}

"""
A collection of descriptive data about the containing object from a specific origin.
"""
type Characterization {
  props: [Property!]
  links: [Link!]
  origin: Origin!
  facets: [CharacterizationFacetsItem!]!
}

"""
An individual characteristic that is part of a larger set produced by the same actor.
"""
type CharacterizationFacetsItem {
  """The name of the risk metric within the specified system."""
  name: String!

  """
  Specifies the naming system under which this risk metric is organized, which
  allows for the same names to be used in different systems controlled by
  different parties. This avoids the potential of a name clash.
  """
  system: String!

  """Indicates the value of the facet."""
  value: String!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
An individual characteristic that is part of a larger set produced by the same actor.
"""
input CharacterizationFacetsItemIn {
  """The name of the risk metric within the specified system."""
  name: String!

  """
  Specifies the naming system under which this risk metric is organized, which
  allows for the same names to be used in different systems controlled by
  different parties. This avoids the potential of a name clash.
  """
  system: String!

  """Indicates the value of the facet."""
  value: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
A collection of descriptive data about the containing object from a specific origin.
"""
input CharacterizationIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  origin: OriginIn!
  facets: [CharacterizationFacetsItemIn!]!
}

"""
A Combine element defines whether and how to combine multiple (competing) versions of the same control
"""
type Combine {
  """How clashing controls should be handled"""
  method: CombineMethod
}

"""
A Combine element defines whether and how to combine multiple (competing) versions of the same control
"""
input CombineIn {
  """How clashing controls should be handled"""
  method: CombineMethod
}

enum CombineMethod {
  use_first
  merge
  keep
}

"""
A collection of component descriptions, which may optionally be grouped by capability.
"""
type Component {
  """
  A globally unique identifier for this component definition instance. This UUID
  should be changed when this document is revised.
  """
  uuid: String!
  metadata: Metadata!
  import_component_definitions: [ImportComponent!]
  components: [DefinedComponent!]
  capabilities: [Capability!]
  back_matter: BackMatter
}

"""Defines how the component or capability supports a set of controls."""
type ComponentControlImplementation {
  """A unique identifier for the set of implemented controls."""
  uuid: String!

  """
  A reference to an OSCAL catalog or profile providing the referenced control or subcontrol definition.
  """
  source: String!

  """
  A description of how the specified set of controls are implemented for the containing component or capability.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  set_parameters: [SetParameter!]
  implemented_requirements: [ImplementedRequirement!]!
}

"""Defines how the component or capability supports a set of controls."""
input ComponentControlImplementationIn {
  """A unique identifier for the set of implemented controls."""
  uuid: String!

  """
  A reference to an OSCAL catalog or profile providing the referenced control or subcontrol definition.
  """
  source: String!

  """
  A description of how the specified set of controls are implemented for the containing component or capability.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  set_parameters: [SetParameterIn!]
  implemented_requirements: [ImplementedRequirementIn!]!
}

"""
Describes how the containing component or capability implements an individual control.
"""
type ComponentImplementedRequirement {
  """A unique identifier for a specific control implementation."""
  uuid: String!

  """A reference to a control with a corresponding id value."""
  control_id: String!

  """
  A description of how the specified control is implemented for the containing component or capability.
  """
  description: String!
  props: [Property!]
  links: [Link!]
  set_parameters: [SetParameter!]
  responsible_roles: [ResponsibleRole!]
  statements: [Statement!]
  remarks: String
}

"""
Describes how the containing component or capability implements an individual control.
"""
input ComponentImplementedRequirementIn {
  """A unique identifier for a specific control implementation."""
  uuid: String!

  """A reference to a control with a corresponding id value."""
  control_id: String!

  """
  A description of how the specified control is implemented for the containing component or capability.
  """
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  set_parameters: [SetParameterIn!]
  responsible_roles: [ResponsibleRoleIn!]
  statements: [StatementIn!]
  remarks: String
}

"""
A collection of component descriptions, which may optionally be grouped by capability.
"""
input ComponentIn {
  """
  A globally unique identifier for this component definition instance. This UUID
  should be changed when this document is revised.
  """
  uuid: String!
  metadata: MetadataIn!
  import_component_definitions: [ImportComponentIn!]
  components: [DefinedComponentIn!]
  capabilities: [CapabilityIn!]
  back_matter: BackMatterIn
}

"""
A structured information object representing a security or privacy control. Each
security or privacy control within the Catalog is defined by a distinct control instance.
"""
type Control {
  """
  A unique identifier for a specific control instance that can be used to
  reference the control in other OSCAL documents. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same control
  across minor revisions of the document.
  """
  id: String!

  """
  A textual label that provides a sub_type or characterization of the control.
  """
  class: String

  """
  A name given to the control, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [Parameter!]
  props: [Property!]
  links: [Link!]
  parts: [Part!]
  controls: [Control!]
}

"""Describes how the system satisfies a set of controls."""
type ControlImplementation {
  """
  A statement describing important things to know about how this set of control satisfaction documentation is approached.
  """
  description: String!
  set_parameters: [SetParameter!]
  implemented_requirements: [ImplementedRequirement!]!
}

"""Describes how the system satisfies a set of controls."""
input ControlImplementationIn {
  """
  A statement describing important things to know about how this set of control satisfaction documentation is approached.
  """
  description: String!
  set_parameters: [SetParameterIn!]
  implemented_requirements: [ImplementedRequirementIn!]!
}

"""
A structured information object representing a security or privacy control. Each
security or privacy control within the Catalog is defined by a distinct control instance.
"""
input ControlIn {
  """
  A unique identifier for a specific control instance that can be used to
  reference the control in other OSCAL documents. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same control
  across minor revisions of the document.
  """
  id: String!

  """
  A textual label that provides a sub_type or characterization of the control.
  """
  class: String

  """
  A name given to the control, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [ParameterIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  parts: [PartIn!]
  controls: [ControlIn!]
}

"""
A Custom element frames a structure for embedding represented controls in resolution.
"""
type Custom {
  groups: [ProfileGroup!]
  insert_controls: [InsertControls!]
}

"""
A Custom element frames a structure for embedding represented controls in resolution.
"""
input CustomIn {
  groups: [ProfileGroupIn!]
  insert_controls: [InsertControlsIn!]
}

"""
A description of the logical flow of information within the system and across
its boundaries, optionally supplemented by diagrams that illustrate these flows.
"""
type DataFlow {
  """A summary of the system's data flow."""
  description: String!
  props: [Property!]
  links: [Link!]
  diagrams: [Diagram!]
  remarks: String
}

"""
A description of the logical flow of information within the system and across
its boundaries, optionally supplemented by diagrams that illustrate these flows.
"""
input DataFlowIn {
  """A summary of the system's data flow."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  diagrams: [DiagramIn!]
  remarks: String
}

"""A defined component that can be part of an implemented system."""
type DefinedComponent {
  """The unique identifier for the component."""
  uuid: String!

  """A category describing the purpose of the component."""
  type: String!

  """A human readable name for the component."""
  title: String!

  """
  A description of the component, including information about its function.
  """
  description: String!

  """A summary of the technological or business purpose of the component."""
  purpose: String
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  protocols: [Protocol!]
  control_implementations: [ComponentControlImplementation!]
  remarks: String
}

"""A defined component that can be part of an implemented system."""
input DefinedComponentIn {
  """The unique identifier for the component."""
  uuid: String!

  """A category describing the purpose of the component."""
  type: String!

  """A human readable name for the component."""
  title: String!

  """
  A description of the component, including information about its function.
  """
  description: String!

  """A summary of the technological or business purpose of the component."""
  purpose: String
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  protocols: [ProtocolIn!]
  control_implementations: [ComponentControlImplementationIn!]
  remarks: String
}

"""
A graphic that provides a visual representation the system, or some aspect of it.
"""
type Diagram {
  """The identifier for this diagram."""
  uuid: String!

  """A summary of the diagram."""
  description: String
  props: [Property!]
  links: [Link!]

  """A brief caption to annotate the diagram."""
  caption: String

  """Commentary about the diagram that enhances it."""
  remarks: String
}

"""
A graphic that provides a visual representation the system, or some aspect of it.
"""
input DiagramIn {
  """The identifier for this diagram."""
  uuid: String!

  """A summary of the diagram."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """A brief caption to annotate the diagram."""
  caption: String

  """Commentary about the diagram that enhances it."""
  remarks: String
}

"""
A document identifier qualified by an identifier scheme. A document identifier
provides a globally unique identifier for a group of documents that are to be
treated as different versions of the same document. If this element does not
appear, or if the value of this element is empty, the value of "document_id" is
equal to the value of the "uuid" flag of the top_level root element.
"""
type DocumentId {
  """
  Qualifies the kind of document identifier using a URI. If the scheme is not
  provided the value of the element will be interpreted as a string of characters.
  """
  scheme: String
  identifier: String!
}

"""
A document identifier qualified by an identifier scheme. A document identifier
provides a globally unique identifier for a group of documents that are to be
treated as different versions of the same document. If this element does not
appear, or if the value of this element is empty, the value of "document_id" is
equal to the value of the "uuid" flag of the top_level root element.
"""
input DocumentIdIn {
  """
  Qualifies the kind of document identifier using a URI. If the scheme is not
  provided the value of the element will be interpreted as a string of characters.
  """
  scheme: String
  identifier: String!
}

"""Describes an individual finding."""
type Finding {
  """
  Uniquely identifies this finding. This UUID may be referenced elsewhere in an
  OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given finding across revisions.
  """
  uuid: String!

  """The title for this finding."""
  title: String!

  """A description of this finding."""
  description: String!
  props: [Property!]
  links: [Link!]
  origins: [Origin!]
  target: FindingTarget!

  """
  Identifies the implementation statement in the SSP to which this finding is related.
  """
  implementation_statement_uuid: String
  related_observations: [FindingRelatedObservationsItem!]
  related_risks: [FindingRelatedRisksItem!]
  remarks: String
}

"""Describes an individual finding."""
input FindingIn {
  """
  Uniquely identifies this finding. This UUID may be referenced elsewhere in an
  OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given finding across revisions.
  """
  uuid: String!

  """The title for this finding."""
  title: String!

  """A description of this finding."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  origins: [OriginIn!]
  target: FindingTargetIn!

  """
  Identifies the implementation statement in the SSP to which this finding is related.
  """
  implementation_statement_uuid: String
  related_observations: [FindingRelatedObservationsItemIn!]
  related_risks: [FindingRelatedRisksItemIn!]
  remarks: String
}

"""
Relates the finding to a set of referenced observations that were used to determine the finding.
"""
type FindingRelatedObservationsItem {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""
Relates the finding to a set of referenced observations that were used to determine the finding.
"""
input FindingRelatedObservationsItemIn {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""
Relates the finding to a set of referenced risks that were used to determine the finding.
"""
type FindingRelatedRisksItem {
  """References an risk defined in the list of risks."""
  risk_uuid: String!
}

"""
Relates the finding to a set of referenced risks that were used to determine the finding.
"""
input FindingRelatedRisksItemIn {
  """References an risk defined in the list of risks."""
  risk_uuid: String!
}

"""
Captures an assessor's conclusions regarding the degree to which an objective is satisfied.
"""
type FindingTarget {
  """Identifies the type of the target."""
  type: FindingTargetType!

  """Identifies the specific target qualified by the type."""
  target_id: String!

  """The title for this objective status."""
  title: String

  """
  A description of the assessor's conclusions regarding the degree to which an objective is satisfied.
  """
  description: String
  props: [Property!]
  links: [Link!]

  """
  A determination of if the objective is satisfied or not within a given system.
  """
  status: FindingTargetStatus!
  implementation_status: ImplementationStatus
  remarks: String
}

"""
Captures an assessor's conclusions regarding the degree to which an objective is satisfied.
"""
input FindingTargetIn {
  """Identifies the type of the target."""
  type: FindingTargetType!

  """Identifies the specific target qualified by the type."""
  target_id: String!

  """The title for this objective status."""
  title: String

  """
  A description of the assessor's conclusions regarding the degree to which an objective is satisfied.
  """
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """
  A determination of if the objective is satisfied or not within a given system.
  """
  status: FindingTargetStatusIn!
  implementation_status: ImplementationStatusIn
  remarks: String
}

"""
A determination of if the objective is satisfied or not within a given system.
"""
type FindingTargetStatus {
  """An indication as to whether the objective is satisfied or not."""
  state: FindingTargetStatusState!

  """The reason the objective was given it's status."""
  reason: String
  remarks: String
}

"""
A determination of if the objective is satisfied or not within a given system.
"""
input FindingTargetStatusIn {
  """An indication as to whether the objective is satisfied or not."""
  state: FindingTargetStatusState!

  """The reason the objective was given it's status."""
  reason: String
  remarks: String
}

enum FindingTargetStatusState {
  satisfied
  not_satisfied
}

enum FindingTargetType {
  statement_id
  objective_id
}

"""A group of controls, or of groups of controls."""
type Group {
  """
  A unique identifier for a specific group instance that can be used to
  reference the group within this and in other OSCAL documents. This
  identifier's uniqueness is document scoped and is intended to be consistent
  for the same group across minor revisions of the document.
  """
  id: String

  """
  A textual label that provides a sub_type or characterization of the group.
  """
  class: String

  """
  A name given to the group, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [Parameter!]
  props: [Property!]
  links: [Link!]
  parts: [Part!]
  groups: [Group!]
  controls: [Control!]
}

"""A group of controls, or of groups of controls."""
input GroupIn {
  """
  A unique identifier for a specific group instance that can be used to
  reference the group within this and in other OSCAL documents. This
  identifier's uniqueness is document scoped and is intended to be consistent
  for the same group across minor revisions of the document.
  """
  id: String

  """
  A textual label that provides a sub_type or characterization of the group.
  """
  class: String

  """
  A name given to the group, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [ParameterIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  parts: [PartIn!]
  groups: [GroupIn!]
  controls: [ControlIn!]
}

"""
A representation of a cryptographic digest generated over a resource using a specified hash algorithm.
"""
type Hash {
  """Method by which a hash is derived"""
  algorithm: String!
  value: String!
}

"""
A representation of a cryptographic digest generated over a resource using a specified hash algorithm.
"""
input HashIn {
  """Method by which a hash is derived"""
  algorithm: String!
  value: String!
}

"""Indicates the degree to which the a given control is implemented."""
type ImplementationStatus {
  """
  Identifies the implementation status of the control or control objective.
  """
  state: String!
  remarks: String
}

"""Indicates the degree to which the a given control is implemented."""
input ImplementationStatusIn {
  """
  Identifies the implementation status of the control or control objective.
  """
  state: String!
  remarks: String
}

"""Describes how the system satisfies an individual control."""
type ImplementedRequirement {
  """
  A globally unique identifier that can be used to reference this control
  requirement entry elsewhere in an OSCAL document. A UUID should be
  consistently used for a given resource across revisions of the document.
  """
  uuid: String!

  """A reference to a control with a corresponding id value."""
  control_id: String!
  props: [Property!]
  links: [Link!]
  set_parameters: [SetParameter!]
  responsible_roles: [ResponsibleRole!]
  statements: [Statement!]
  by_components: [ByComponent!]
  remarks: String
}

"""Describes how the system satisfies an individual control."""
input ImplementedRequirementIn {
  """
  A globally unique identifier that can be used to reference this control
  requirement entry elsewhere in an OSCAL document. A UUID should be
  consistently used for a given resource across revisions of the document.
  """
  uuid: String!

  """A reference to a control with a corresponding id value."""
  control_id: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  set_parameters: [SetParameterIn!]
  responsible_roles: [ResponsibleRoleIn!]
  statements: [StatementIn!]
  by_components: [ByComponentIn!]
  remarks: String
}

"""
The import designates a catalog, profile, or other resource to be included
(referenced and potentially modified) by this profile. The import also
identifies which controls to select using the include_all, include_controls, and
exclude_controls directives.
"""
type Import {
  """
  A resolvable URL reference to the base catalog or profile that this profile is tailoring.
  """
  href: String!
  include_all: IncludeAll
  include_controls: [SelectControlById!]
  exclude_controls: [SelectControlById!]
}

"""
Used by assessment_results to import information about the original plan for assessing the system.
"""
type ImportAp {
  """
  >A resolvable URL reference to the assessment plan governing the assessment activities.
  """
  href: String!
  remarks: String
}

"""
Used by assessment_results to import information about the original plan for assessing the system.
"""
input ImportApIn {
  """
  >A resolvable URL reference to the assessment plan governing the assessment activities.
  """
  href: String!
  remarks: String
}

"""Loads a component definition from another resource."""
type ImportComponent {
  """
  A link to a resource that defines a set of components and/or capabilities to import into this collection.
  """
  href: String!
}

"""Loads a component definition from another resource."""
input ImportComponentIn {
  """
  A link to a resource that defines a set of components and/or capabilities to import into this collection.
  """
  href: String!
}

"""
The import designates a catalog, profile, or other resource to be included
(referenced and potentially modified) by this profile. The import also
identifies which controls to select using the include_all, include_controls, and
exclude_controls directives.
"""
input ImportIn {
  """
  A resolvable URL reference to the base catalog or profile that this profile is tailoring.
  """
  href: String!
  include_all: IncludeAllIn
  include_controls: [SelectControlByIdIn!]
  exclude_controls: [SelectControlByIdIn!]
}

"""
Used to import the OSCAL profile representing the system's control baseline.
"""
type ImportProfile {
  """
  A resolvable URL reference to the profile to use as the system's control baseline.
  """
  href: String!
  remarks: String
}

"""
Used to import the OSCAL profile representing the system's control baseline.
"""
input ImportProfileIn {
  """
  A resolvable URL reference to the profile to use as the system's control baseline.
  """
  href: String!
  remarks: String
}

"""
Used by the assessment plan and POA&M to import information about the system.
"""
type ImportSsp {
  """
  >A resolvable URL reference to the system security plan for the system being assessed.
  """
  href: String!
  remarks: String
}

"""
Used by the assessment plan and POA&M to import information about the system.
"""
input ImportSspIn {
  """
  >A resolvable URL reference to the system security plan for the system being assessed.
  """
  href: String!
  remarks: String
}

"""
Insert all controls from the imported catalog or profile resources identified in the import directive.
"""
type IncludeAll {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""
Insert all controls from the imported catalog or profile resources identified in the import directive.
"""
input IncludeAllIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""TBD"""
type IncorporatesComponent {
  """A reference to a component by its identifier"""
  component_uuid: String!

  """
  A description of the component, including information about its function.
  """
  description: String!
}

"""TBD"""
input IncorporatesComponentIn {
  """A reference to a component by its identifier"""
  component_uuid: String!

  """
  A description of the component, including information about its function.
  """
  description: String!
}

"""Specifies which controls to use in the containing context."""
type InsertControls {
  """
  A designation of how a selection of controls in a profile is to be ordered.
  """
  order: InsertControlsOrder
  include_all: IncludeAll
  include_controls: [Call!]
  exclude_controls: [Call!]
}

"""Specifies which controls to use in the containing context."""
input InsertControlsIn {
  """
  A designation of how a selection of controls in a profile is to be ordered.
  """
  order: InsertControlsOrder
  include_all: IncludeAllIn
  include_controls: [CallIn!]
  exclude_controls: [CallIn!]
}

enum InsertControlsOrder {
  keep
  ascending
  descending
}

"""A single managed inventory item within the system."""
type InventoryItem {
  """
  A globally unique identifier that can be used to reference this inventory item
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """A summary of the inventory item stating its purpose within the system."""
  description: String!
  props: [Property!]
  links: [Link!]
  responsible_parties: [ResponsibleParty!]
  implemented_components: [InventoryItemImplementedComponentsItem!]
  remarks: String
}

"""
The set of components that are implemented in a given system inventory item.
"""
type InventoryItemImplementedComponentsItem {
  """
  A reference to a component that is implemented as part of an inventory item.
  """
  component_uuid: String!
  props: [Property!]
  links: [Link!]
  responsible_parties: [ResponsibleParty!]
  remarks: String
}

"""
The set of components that are implemented in a given system inventory item.
"""
input InventoryItemImplementedComponentsItemIn {
  """
  A reference to a component that is implemented as part of an inventory item.
  """
  component_uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_parties: [ResponsiblePartyIn!]
  remarks: String
}

"""A single managed inventory item within the system."""
input InventoryItemIn {
  """
  A globally unique identifier that can be used to reference this inventory item
  entry elsewhere in an OSCAL document. A UUID should be consistently used for a
  given resource across revisions of the document.
  """
  uuid: String!

  """A summary of the inventory item stating its purpose within the system."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_parties: [ResponsiblePartyIn!]
  implemented_components: [InventoryItemImplementedComponentsItemIn!]
  remarks: String
}

"""A reference to a local or remote resource"""
type Link {
  """A resolvable URL reference to a resource."""
  href: String!

  """
  Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.
  """
  rel: String

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String

  """
  A textual label to associate with the link, which may be used for presentation in a tool.
  """
  text: String
}

"""A reference to a local or remote resource"""
input LinkIn {
  """A resolvable URL reference to a resource."""
  href: String!

  """
  Describes the type of relationship provided by the link. This can be an indicator of the link's purpose.
  """
  rel: String

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String

  """
  A textual label to associate with the link, which may be used for presentation in a tool.
  """
  text: String
}

"""
A local definition of a control objective for this assessment. Uses catalog
syntax for control objective and assessment actions.
"""
type LocalObjective {
  """A reference to a control with a corresponding id value."""
  control_id: String!

  """A description of this control objective."""
  description: String
  props: [Property!]
  links: [Link!]
  parts: [Part!]!
  remarks: String
}

"""
A local definition of a control objective for this assessment. Uses catalog
syntax for control objective and assessment actions.
"""
input LocalObjectiveIn {
  """A reference to a control with a corresponding id value."""
  control_id: String!

  """A description of this control objective."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  parts: [PartIn!]!
  remarks: String
}

"""A location, with associated metadata that can be referenced."""
type Location {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  location across revisions of the document.
  """
  uuid: String!

  """
  A name given to the location, which may be used by a tool for display and navigation.
  """
  title: String
  address: Address!
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumber!]
  urls: [String!]
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""A location, with associated metadata that can be referenced."""
input LocationIn {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  location across revisions of the document.
  """
  uuid: String!

  """
  A name given to the location, which may be used by a tool for display and navigation.
  """
  title: String
  address: AddressIn!
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumberIn!]
  urls: [String!]
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""Used to indicate who created a log entry in what role."""
type LoggedBy {
  """A pointer to the party who is making the log entry."""
  party_uuid: String!

  """
  A point to the role_id of the role in which the party is making the log entry.
  """
  role_id: String
}

"""Used to indicate who created a log entry in what role."""
input LoggedByIn {
  """A pointer to the party who is making the log entry."""
  party_uuid: String!

  """
  A point to the role_id of the role in which the party is making the log entry.
  """
  role_id: String
}

"""A Merge element merges controls in resolution."""
type Merge {
  combine: Combine
  as_is: Boolean
  custom: Custom
}

"""A Merge element merges controls in resolution."""
input MergeIn {
  combine: CombineIn
  as_is: Boolean
  custom: CustomIn
}

"""
Provides information about the publication and availability of the containing document.
"""
type Metadata {
  """
  A name given to the document, which may be used by a tool for display and navigation.
  """
  title: String!
  published: String
  last_modified: String!
  version: String!
  oscal_version: String!
  revisions: [Revision!]
  document_ids: [DocumentId!]
  props: [Property!]
  links: [Link!]
  roles: [Role!]
  locations: [Location!]
  parties: [Party!]
  responsible_parties: [ResponsibleParty!]
  remarks: String
}

"""
Provides information about the publication and availability of the containing document.
"""
input MetadataIn {
  """
  A name given to the document, which may be used by a tool for display and navigation.
  """
  title: String!
  published: String
  last_modified: String!
  version: String!
  oscal_version: String!
  revisions: [RevisionIn!]
  document_ids: [DocumentIdIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  roles: [RoleIn!]
  locations: [LocationIn!]
  parties: [PartyIn!]
  responsible_parties: [ResponsiblePartyIn!]
  remarks: String
}

"""Set parameters or amend controls in resolution"""
type Modify {
  set_parameters: [ModifySetParametersItem!]
  alters: [Alter!]
}

"""Set parameters or amend controls in resolution"""
input ModifyIn {
  set_parameters: [ModifySetParametersItemIn!]
  alters: [AlterIn!]
}

"""A parameter setting, to be propagated to points of insertion"""
type ModifySetParametersItem {
  """
  Indicates the value of the 'id' flag on a target parameter; i.e. which parameter to set
  """
  param_id: String!

  """A textual label that provides a characterization of the parameter."""
  class: String

  """Another parameter invoking this one"""
  depends_on: String
  props: [Property!]
  links: [Link!]

  """
  A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.
  """
  label: String

  """Describes the purpose and use of a parameter"""
  usage: String
  constraints: [ParameterConstraint!]
  guidelines: [ParameterGuideline!]
  values: [String!]
  select: ParameterSelection
}

"""A parameter setting, to be propagated to points of insertion"""
input ModifySetParametersItemIn {
  """
  Indicates the value of the 'id' flag on a target parameter; i.e. which parameter to set
  """
  param_id: String!

  """A textual label that provides a characterization of the parameter."""
  class: String

  """Another parameter invoking this one"""
  depends_on: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """
  A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.
  """
  label: String

  """Describes the purpose and use of a parameter"""
  usage: String
  constraints: [ParameterConstraintIn!]
  guidelines: [ParameterGuidelineIn!]
  values: [String!]
  select: ParameterSelectionIn
}

"""
A description of the system's network architecture, optionally supplemented by
diagrams that illustrate the network architecture.
"""
type NetworkArchitecture {
  """A summary of the system's network architecture."""
  description: String!
  props: [Property!]
  links: [Link!]
  diagrams: [Diagram!]
  remarks: String
}

"""
A description of the system's network architecture, optionally supplemented by
diagrams that illustrate the network architecture.
"""
input NetworkArchitectureIn {
  """A summary of the system's network architecture."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  diagrams: [DiagramIn!]
  remarks: String
}

"""Describes an individual observation."""
type Observation {
  """
  Uniquely identifies this observation. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given observation across revisions.
  """
  uuid: String!

  """The title for this observation."""
  title: String

  """A description of this assessment observation."""
  description: String!
  props: [Property!]
  links: [Link!]
  methods: [String!]!
  types: [String!]
  origins: [Origin!]
  subjects: [SubjectReference!]
  relevant_evidence: [ObservationRelevantEvidenceItem!]

  """
  Date/time stamp identifying when the finding information was collected.
  """
  collected: String!

  """
  Date/time identifying when the finding information is out_of_date and no
  longer valid. Typically used with continuous assessment scenarios.
  """
  expires: String
  remarks: String
}

"""Describes an individual observation."""
input ObservationIn {
  """
  Uniquely identifies this observation. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given observation across revisions.
  """
  uuid: String!

  """The title for this observation."""
  title: String

  """A description of this assessment observation."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  methods: [String!]!
  types: [String!]
  origins: [OriginIn!]
  subjects: [SubjectReferenceIn!]
  relevant_evidence: [ObservationRelevantEvidenceItemIn!]

  """
  Date/time stamp identifying when the finding information was collected.
  """
  collected: String!

  """
  Date/time identifying when the finding information is out_of_date and no
  longer valid. Typically used with continuous assessment scenarios.
  """
  expires: String
  remarks: String
}

"""Links this observation to relevant evidence."""
type ObservationRelevantEvidenceItem {
  """>A resolvable URL reference to relevant evidence."""
  href: String

  """A description of this evidence."""
  description: String!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""Links this observation to relevant evidence."""
input ObservationRelevantEvidenceItemIn {
  """>A resolvable URL reference to relevant evidence."""
  href: String

  """A description of this evidence."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

type OrganizationMissionStatement {
  uuid: String

  """
  A mission statement defines what line of business an organization is in, and why it exists or what purpose it serves. 
  """
  mission: String!

  """Functions carried out by an organization"""
  business_functions: [OrganizationMissionStatementBusinessFunctionsItem!]
}

"""A Function that a business or enterprise performs"""
type OrganizationMissionStatementBusinessFunctionsItem {
  uuid: String

  """Human readable shortname for a business function"""
  title: String!
  type: OrganizationMissionStatementBusinessFunctionsItemType!

  """Details of a business function"""
  description: String!
  links: [Link!]
}

"""A Function that a business or enterprise performs"""
input OrganizationMissionStatementBusinessFunctionsItemIn {
  uuid: String

  """Human readable shortname for a business function"""
  title: String!
  type: OrganizationMissionStatementBusinessFunctionsItemType!

  """Details of a business function"""
  description: String!
  links: [LinkIn!]
}

enum OrganizationMissionStatementBusinessFunctionsItemType {
  core
  support
}

input OrganizationMissionStatementIn {
  uuid: String

  """
  A mission statement defines what line of business an organization is in, and why it exists or what purpose it serves. 
  """
  mission: String!

  """Functions carried out by an organization"""
  business_functions: [OrganizationMissionStatementBusinessFunctionsItemIn!]
}

"""
Identifies the source of the finding, such as a tool, interviewed person, or activity.
"""
type Origin {
  actors: [OriginActor!]!
  related_tasks: [RelatedTask!]
}

"""
The actor that produces an observation, a finding, or a risk. One or more actor
type can be used to specify a person that is using a tool.
"""
type OriginActor {
  """The kind of actor."""
  type: OriginActorType!

  """A pointer to the tool or person based on the associated type."""
  actor_uuid: String!

  """
  For a party, this can optionally be used to specify the role the actor was performing.
  """
  role_id: String
  props: [Property!]
  links: [Link!]
}

"""
The actor that produces an observation, a finding, or a risk. One or more actor
type can be used to specify a person that is using a tool.
"""
input OriginActorIn {
  """The kind of actor."""
  type: OriginActorType!

  """A pointer to the tool or person based on the associated type."""
  actor_uuid: String!

  """
  For a party, this can optionally be used to specify the role the actor was performing.
  """
  role_id: String
  props: [PropertyIn!]
  links: [LinkIn!]
}

enum OriginActorType {
  tool
  assessment_platform
  party
}

"""
Identifies the source of the finding, such as a tool, interviewed person, or activity.
"""
input OriginIn {
  actors: [OriginActorIn!]!
  related_tasks: [RelatedTaskIn!]
}

"""
Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
"""
type Parameter {
  """
  A unique identifier for a specific parameter instance. This identifier's
  uniqueness is document scoped and is intended to be consistent for the same
  parameter across minor revisions of the document.
  """
  id: String!

  """A textual label that provides a characterization of the parameter."""
  class: String

  """Another parameter invoking this one"""
  depends_on: String
  props: [Property!]
  links: [Link!]

  """
  A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.
  """
  label: String

  """Describes the purpose and use of a parameter"""
  usage: String
  constraints: [ParameterConstraint!]
  guidelines: [ParameterGuideline!]
  values: [String!]
  select: ParameterSelection
  remarks: String
}

"""A formal or informal expression of a constraint or test"""
type ParameterConstraint {
  """A textual summary of the constraint to be applied."""
  description: String
  tests: [ParameterConstraintTestsItem!]
}

"""A formal or informal expression of a constraint or test"""
input ParameterConstraintIn {
  """A textual summary of the constraint to be applied."""
  description: String
  tests: [ParameterConstraintTestsItemIn!]
}

"""A test expression which is expected to be evaluated by a tool."""
type ParameterConstraintTestsItem {
  """A formal (executable) expression of a constraint"""
  expression: String!
  remarks: String
}

"""A test expression which is expected to be evaluated by a tool."""
input ParameterConstraintTestsItemIn {
  """A formal (executable) expression of a constraint"""
  expression: String!
  remarks: String
}

"""
A prose statement that provides a recommendation for the use of a parameter.
"""
type ParameterGuideline {
  """Prose permits multiple paragraphs, lists, tables etc."""
  prose: String!
}

"""
A prose statement that provides a recommendation for the use of a parameter.
"""
input ParameterGuidelineIn {
  """Prose permits multiple paragraphs, lists, tables etc."""
  prose: String!
}

"""
Parameters provide a mechanism for the dynamic assignment of value(s) in a control.
"""
input ParameterIn {
  """
  A unique identifier for a specific parameter instance. This identifier's
  uniqueness is document scoped and is intended to be consistent for the same
  parameter across minor revisions of the document.
  """
  id: String!

  """A textual label that provides a characterization of the parameter."""
  class: String

  """Another parameter invoking this one"""
  depends_on: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """
  A short, placeholder name for the parameter, which can be used as a substitute for a value if no value is assigned.
  """
  label: String

  """Describes the purpose and use of a parameter"""
  usage: String
  constraints: [ParameterConstraintIn!]
  guidelines: [ParameterGuidelineIn!]
  values: [String!]
  select: ParameterSelectionIn
  remarks: String
}

"""Presenting a choice among alternatives"""
type ParameterSelection {
  """
  Describes the number of selections that must occur. Without this setting, only
  one value should be assumed to be permitted.
  """
  how_many: ParameterSelectionHowMany
  choice: [String!]
}

enum ParameterSelectionHowMany {
  one
  one_or_more
}

"""Presenting a choice among alternatives"""
input ParameterSelectionIn {
  """
  Describes the number of selections that must occur. Without this setting, only
  one value should be assumed to be permitted.
  """
  how_many: ParameterSelectionHowMany
  choice: [String!]
}

"""A partition of a control's definition or a child of another part."""
type Part {
  """
  A unique identifier for a specific part instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same part across
  minor revisions of the document.
  """
  id: String

  """A textual label that uniquely identifies the part's semantic type."""
  name: String!

  """
  A namespace qualifying the part's name. This allows different organizations to
  associate distinct semantics with the same name.
  """
  ns: String

  """
  A textual label that provides a sub_type or characterization of the part's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple parts of the same control with the same name and ns.
  """
  class: String

  """
  A name given to the part, which may be used by a tool for display and navigation.
  """
  title: String
  props: [Property!]

  """Permits multiple paragraphs, lists, tables etc."""
  prose: String
  parts: [Part!]
  links: [Link!]
}

"""A partition of a control's definition or a child of another part."""
input PartIn {
  """
  A unique identifier for a specific part instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same part across
  minor revisions of the document.
  """
  id: String

  """A textual label that uniquely identifies the part's semantic type."""
  name: String!

  """
  A namespace qualifying the part's name. This allows different organizations to
  associate distinct semantics with the same name.
  """
  ns: String

  """
  A textual label that provides a sub_type or characterization of the part's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple parts of the same control with the same name and ns.
  """
  class: String

  """
  A name given to the part, which may be used by a tool for display and navigation.
  """
  title: String
  props: [PropertyIn!]

  """Permits multiple paragraphs, lists, tables etc."""
  prose: String
  parts: [PartIn!]
  links: [LinkIn!]
}

"""A responsible entity which is either a person or an organization."""
type Party {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  party across revisions of the document.
  """
  uuid: String!

  """A category describing the kind of party the object describes."""
  type: PartyType!

  """
  The full name of the party. This is typically the legal name associated with the party.
  """
  name: String

  """A short common name, abbreviation, or acronym for the party."""
  short_name: String
  external_ids: [PartyExternalIdsItem!]
  props: [Property!]
  links: [Link!]
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumber!]
  addresses: [Address!]
  location_uuids: [String!]
  member_of_organizations: [String!]
  remarks: String
}

"""
An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)
"""
type PartyExternalIdsItem {
  """Indicates the type of external identifier."""
  scheme: String!
  id: String!
}

"""
An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)
"""
input PartyExternalIdsItemIn {
  """Indicates the type of external identifier."""
  scheme: String!
  id: String!
}

"""A responsible entity which is either a person or an organization."""
input PartyIn {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  party across revisions of the document.
  """
  uuid: String!

  """A category describing the kind of party the object describes."""
  type: PartyType!

  """
  The full name of the party. This is typically the legal name associated with the party.
  """
  name: String

  """A short common name, abbreviation, or acronym for the party."""
  short_name: String
  external_ids: [PartyExternalIdsItemIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumberIn!]
  addresses: [AddressIn!]
  location_uuids: [String!]
  member_of_organizations: [String!]
  remarks: String
}

enum PartyType {
  person
  organization
}

"""A responsible entity which is either a person or an organization."""
type PartyWithName {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  party across revisions of the document.
  """
  uuid: String!

  """A category describing the kind of party the object describes."""
  type: PartyWithNameType!

  """
  The full name of the party. This is typically the legal name associated with the party.
  """
  name: String!

  """A short common name, abbreviation, or acronym for the party."""
  short_name: String
  external_ids: [PartyWithNameExternalIdsItem!]
  props: [Property!]
  links: [Link!]
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumber!]
  addresses: [Address!]
  location_uuids: [String!]
  member_of_organizations: [String!]
  remarks: String
}

"""
An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)
"""
type PartyWithNameExternalIdsItem {
  """Indicates the type of external identifier."""
  scheme: String!
  id: String!
}

"""
An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)
"""
input PartyWithNameExternalIdsItemIn {
  """Indicates the type of external identifier."""
  scheme: String!
  id: String!
}

"""A responsible entity which is either a person or an organization."""
input PartyWithNameIn {
  """
  A unique identifier that can be used to reference this defined location
  elsewhere in an OSCAL document. A UUID should be consistently used for a given
  party across revisions of the document.
  """
  uuid: String!

  """A category describing the kind of party the object describes."""
  type: PartyWithNameType!

  """
  The full name of the party. This is typically the legal name associated with the party.
  """
  name: String!

  """A short common name, abbreviation, or acronym for the party."""
  short_name: String
  external_ids: [PartyWithNameExternalIdsItemIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  email_addresses: [String!]
  telephone_numbers: [TelephoneNumberIn!]
  addresses: [AddressIn!]
  location_uuids: [String!]
  member_of_organizations: [String!]
  remarks: String
}

enum PartyWithNameType {
  person
  organization
}

"""
A plan of action and milestones which identifies initial and residual risks,
deviations, and disposition, such as those required by FedRAMP.
"""
type PlanOfActionAndMilestones {
  """
  Uniquely identifies this POA&M. This UUID must be changed each time the content of the POA&M changes.
  """
  uuid: String!
  metadata: Metadata!
  import_ssp: ImportSsp
  system_id: SystemId
  local_definitions: PoamLocals
  observations: [Observation!]
  risks: [Risk!]
  poam_items: [PoamItem!]!
  back_matter: BackMatter
}

"""
A plan of action and milestones which identifies initial and residual risks,
deviations, and disposition, such as those required by FedRAMP.
"""
input PlanOfActionAndMilestonesIn {
  """
  Uniquely identifies this POA&M. This UUID must be changed each time the content of the POA&M changes.
  """
  uuid: String!
  metadata: MetadataIn!
  import_ssp: ImportSspIn
  system_id: SystemIdIn
  local_definitions: PoamLocalsIn
  observations: [ObservationIn!]
  risks: [RiskIn!]
  poam_items: [PoamItemIn!]!
  back_matter: BackMatterIn
}

"""Describes an individual POA&M item."""
type PoamItem {
  """
  Uniquely identifies the POA&M entry. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. A UUID should be
  consistently used for a given POA&M item across revisions of the document.
  """
  uuid: String

  """The title or name for this POA&M item ."""
  title: String!

  """A description of POA&M item."""
  description: String!
  props: [Property!]
  links: [Link!]
  origins: [PoamItemOriginsItem!]
  related_observations: [PoamItemRelatedObservationsItem!]
  related_risks: [PoamItemRelatedRisksItem!]
  remarks: String
}

"""Describes an individual POA&M item."""
input PoamItemIn {
  """
  Uniquely identifies the POA&M entry. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. A UUID should be
  consistently used for a given POA&M item across revisions of the document.
  """
  uuid: String

  """The title or name for this POA&M item ."""
  title: String!

  """A description of POA&M item."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  origins: [PoamItemOriginsItemIn!]
  related_observations: [PoamItemRelatedObservationsItemIn!]
  related_risks: [PoamItemRelatedRisksItemIn!]
  remarks: String
}

"""Identifies the source of the finding, such as a tool or person."""
type PoamItemOriginsItem {
  actors: [OriginActor!]!
}

"""Identifies the source of the finding, such as a tool or person."""
input PoamItemOriginsItemIn {
  actors: [OriginActorIn!]!
}

"""
Relates the poam_item to a set of referenced observations that were used to determine the finding.
"""
type PoamItemRelatedObservationsItem {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""
Relates the poam_item to a set of referenced observations that were used to determine the finding.
"""
input PoamItemRelatedObservationsItemIn {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""
Relates the finding to a set of referenced risks that were used to determine the finding.
"""
type PoamItemRelatedRisksItem {
  """References an risk defined in the list of risks."""
  risk_uuid: String!
}

"""
Relates the finding to a set of referenced risks that were used to determine the finding.
"""
input PoamItemRelatedRisksItemIn {
  """References an risk defined in the list of risks."""
  risk_uuid: String!
}

"""
Allows components, and inventory_items to be defined within the POA&M for
circumstances where no OSCAL_based SSP exists, or is not delivered with the POA&M.
"""
type PoamLocals {
  components: [SystemComponent!]
  inventory_items: [InventoryItem!]
  remarks: String
}

"""
Allows components, and inventory_items to be defined within the POA&M for
circumstances where no OSCAL_based SSP exists, or is not delivered with the POA&M.
"""
input PoamLocalsIn {
  components: [SystemComponentIn!]
  inventory_items: [InventoryItemIn!]
  remarks: String
}

"""
Where applicable this is the IPv4 port range on which the service operates.
"""
type PortRange {
  """Indicates the starting port number in a port range"""
  start: Int

  """Indicates the ending port number in a port range"""
  end: Int

  """Indicates the transport type."""
  transport: PortRangeTransport
}

"""
Where applicable this is the IPv4 port range on which the service operates.
"""
input PortRangeIn {
  """Indicates the starting port number in a port range"""
  start: Int

  """Indicates the ending port number in a port range"""
  end: Int

  """Indicates the transport type."""
  transport: PortRangeTransport
}

enum PortRangeTransport {
  TCP
  UDP
}

"""Each OSCAL profile is defined by a Profile element"""
type Profile {
  """
  A globally unique identifier for this profile instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: Metadata!
  imports: [Import!]!
  merge: Merge
  modify: Modify
  back_matter: BackMatter
}

"""A group of (selected) controls or of groups of controls"""
type ProfileGroup {
  """
  A unique identifier for a specific group instance that can be used to
  reference the group within this and in other OSCAL documents. This
  identifier's uniqueness is document scoped and is intended to be consistent
  for the same group across minor revisions of the document.
  """
  id: String

  """
  A textual label that provides a sub_type or characterization of the group.
  """
  class: String

  """
  A name given to the group, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [Parameter!]
  props: [Property!]
  links: [Link!]
  parts: [Part!]
  groups: [ProfileGroup!]
  insert_controls: [InsertControls!]
}

"""A group of (selected) controls or of groups of controls"""
input ProfileGroupIn {
  """
  A unique identifier for a specific group instance that can be used to
  reference the group within this and in other OSCAL documents. This
  identifier's uniqueness is document scoped and is intended to be consistent
  for the same group across minor revisions of the document.
  """
  id: String

  """
  A textual label that provides a sub_type or characterization of the group.
  """
  class: String

  """
  A name given to the group, which may be used by a tool for display and navigation.
  """
  title: String!
  params: [ParameterIn!]
  props: [PropertyIn!]
  links: [LinkIn!]
  parts: [PartIn!]
  groups: [ProfileGroupIn!]
  insert_controls: [InsertControlsIn!]
}

"""Each OSCAL profile is defined by a Profile element"""
input ProfileIn {
  """
  A globally unique identifier for this profile instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: MetadataIn!
  imports: [ImportIn!]!
  merge: MergeIn
  modify: ModifyIn
  back_matter: BackMatterIn
}

"""
An attribute, characteristic, or quality of the containing object expressed as a
namespace qualified name/value pair. The value of a property is a simple scalar
value, which may be expressed as a list of values.
"""
type Property {
  """
  A textual label that uniquely identifies a specific attribute, characteristic,
  or quality of the property's containing object.
  """
  name: String!

  """
  A unique identifier that can be used to reference this property elsewhere in
  an OSCAL document. A UUID should be consistently used for a given location
  across revisions of the document.
  """
  uuid: String

  """
  A namespace qualifying the property's name. This allows different
  organizations to associate distinct semantics with the same name.
  """
  ns: String

  """Indicates the value of the attribute, characteristic, or quality."""
  value: String!

  """
  A textual label that provides a sub_type or characterization of the property's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple properties of the same object with the same name and ns.
  """
  class: String
  remarks: String
}

"""
An attribute, characteristic, or quality of the containing object expressed as a
namespace qualified name/value pair. The value of a property is a simple scalar
value, which may be expressed as a list of values.
"""
input PropertyIn {
  """
  A textual label that uniquely identifies a specific attribute, characteristic,
  or quality of the property's containing object.
  """
  name: String!

  """
  A unique identifier that can be used to reference this property elsewhere in
  an OSCAL document. A UUID should be consistently used for a given location
  across revisions of the document.
  """
  uuid: String

  """
  A namespace qualifying the property's name. This allows different
  organizations to associate distinct semantics with the same name.
  """
  ns: String

  """Indicates the value of the attribute, characteristic, or quality."""
  value: String!

  """
  A textual label that provides a sub_type or characterization of the property's
  name. This can be used to further distinguish or discriminate between the
  semantics of multiple properties of the same object with the same name and ns.
  """
  class: String
  remarks: String
}

"""Information about the protocol used to provide a service."""
type Protocol {
  """
  A globally unique identifier that can be used to reference this service
  protocol entry elsewhere in an OSCAL document. A UUID should be consistently
  used for a given resource across revisions of the document.
  """
  uuid: String

  """
  The common name of the protocol, which should be the appropriate "service
  name" from the IANA Service Name and Transport Protocol Port Number Registry.
  """
  name: String!

  """
  A human readable name for the protocol (e.g., Transport Layer Security).
  """
  title: String
  port_ranges: [PortRange!]
}

"""Information about the protocol used to provide a service."""
input ProtocolIn {
  """
  A globally unique identifier that can be used to reference this service
  protocol entry elsewhere in an OSCAL document. A UUID should be consistently
  used for a given resource across revisions of the document.
  """
  uuid: String

  """
  The common name of the protocol, which should be the appropriate "service
  name" from the IANA Service Name and Transport Protocol Port Number Registry.
  """
  name: String!

  """
  A human readable name for the protocol (e.g., Transport Layer Security).
  """
  title: String
  port_ranges: [PortRangeIn!]
}

"""
Identifies an individual task for which the containing object is a consequence of.
"""
type RelatedTask {
  """References a unique task by UUID."""
  task_uuid: String!
  props: [Property!]
  links: [Link!]
  responsible_parties: [ResponsibleParty!]
  subjects: [AssessmentSubject!]

  """Used to detail assessment subjects that were identfied by this task."""
  identified_subject: RelatedTaskIdentifiedSubject
  remarks: String
}

"""Used to detail assessment subjects that were identfied by this task."""
type RelatedTaskIdentifiedSubject {
  """
  References a unique assessment subject placeholder defined by this task.
  """
  subject_placeholder_uuid: String!
  subjects: [AssessmentSubject!]!
}

"""Used to detail assessment subjects that were identfied by this task."""
input RelatedTaskIdentifiedSubjectIn {
  """
  References a unique assessment subject placeholder defined by this task.
  """
  subject_placeholder_uuid: String!
  subjects: [AssessmentSubjectIn!]!
}

"""
Identifies an individual task for which the containing object is a consequence of.
"""
input RelatedTaskIn {
  """References a unique task by UUID."""
  task_uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_parties: [ResponsiblePartyIn!]
  subjects: [AssessmentSubjectIn!]

  """Used to detail assessment subjects that were identfied by this task."""
  identified_subject: RelatedTaskIdentifiedSubjectIn
  remarks: String
}

"""
Specifies objects to be removed from a control based on specific aspects of the object that must all match.
"""
type Remove {
  """Identify items to remove by matching their assigned name"""
  by_name: String

  """Identify items to remove by matching their class."""
  by_class: String

  """Identify items to remove indicated by their id."""
  by_id: String

  """
  Identify items to remove by the name of the item's information element name, e.g. title or prop
  """
  by_item_name: String

  """
  Identify items to remove by the item's ns, which is the namespace associated with a part, or prop.
  """
  by_ns: String
}

"""
Specifies objects to be removed from a control based on specific aspects of the object that must all match.
"""
input RemoveIn {
  """Identify items to remove by matching their assigned name"""
  by_name: String

  """Identify items to remove by matching their class."""
  by_class: String

  """Identify items to remove indicated by their id."""
  by_id: String

  """
  Identify items to remove by the name of the item's information element name, e.g. title or prop
  """
  by_item_name: String

  """
  Identify items to remove by the item's ns, which is the namespace associated with a part, or prop.
  """
  by_ns: String
}

"""
A resource associated with content in the containing document. A resource may be
directly included in the document base64 encoded or may point to one or more
equivalent internet resources.
"""
type Resource {
  """
  A globally unique identifier that can be used to reference this defined
  resource elsewhere in an OSCAL document. A UUID should be consistently used
  for a given resource across revisions of the document.
  """
  uuid: String!

  """
  A name given to the resource, which may be used by a tool for display and navigation.
  """
  title: String

  """
  A short summary of the resource used to indicate the purpose of the resource.
  """
  description: String
  props: [Property!]
  document_ids: [DocumentId!]

  """
  A citation consisting of end note text and optional structured bibliographic data.
  """
  citation: ResourceCitation
  rlinks: [ResourceRlinksItem!]

  """The Base64 alphabet in RFC 2045 _ aligned with XSD."""
  base64: ResourceBase64
  remarks: String
}

"""The Base64 alphabet in RFC 2045 _ aligned with XSD."""
type ResourceBase64 {
  """
  Name of the file before it was encoded as Base64 to be embedded in a resource.
  This is the name that will be assigned to the file when the file is decoded.
  """
  filename: String

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String
  value: String!
}

"""The Base64 alphabet in RFC 2045 _ aligned with XSD."""
input ResourceBase64In {
  """
  Name of the file before it was encoded as Base64 to be embedded in a resource.
  This is the name that will be assigned to the file when the file is decoded.
  """
  filename: String

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String
  value: String!
}

"""
A citation consisting of end note text and optional structured bibliographic data.
"""
type ResourceCitation {
  """A line of citation text."""
  text: String!
  props: [Property!]
  links: [Link!]
}

"""
A citation consisting of end note text and optional structured bibliographic data.
"""
input ResourceCitationIn {
  """A line of citation text."""
  text: String!
  props: [PropertyIn!]
  links: [LinkIn!]
}

"""
A resource associated with content in the containing document. A resource may be
directly included in the document base64 encoded or may point to one or more
equivalent internet resources.
"""
input ResourceIn {
  """
  A globally unique identifier that can be used to reference this defined
  resource elsewhere in an OSCAL document. A UUID should be consistently used
  for a given resource across revisions of the document.
  """
  uuid: String!

  """
  A name given to the resource, which may be used by a tool for display and navigation.
  """
  title: String

  """
  A short summary of the resource used to indicate the purpose of the resource.
  """
  description: String
  props: [PropertyIn!]
  document_ids: [DocumentIdIn!]

  """
  A citation consisting of end note text and optional structured bibliographic data.
  """
  citation: ResourceCitationIn
  rlinks: [ResourceRlinksItemIn!]

  """The Base64 alphabet in RFC 2045 _ aligned with XSD."""
  base64: ResourceBase64In
  remarks: String
}

"""
A pointer to an external resource with an optional hash for verification and change detection.
"""
type ResourceRlinksItem {
  """A resolvable URI reference to a resource."""
  href: String!

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String
  hashes: [Hash!]
}

"""
A pointer to an external resource with an optional hash for verification and change detection.
"""
input ResourceRlinksItemIn {
  """A resolvable URI reference to a resource."""
  href: String!

  """
  Specifies a media type as defined by the Internet Assigned Numbers Authority (IANA) Media Types Registry.
  """
  media_type: String
  hashes: [HashIn!]
}

"""
Describes either recommended or an actual plan for addressing the risk.
"""
type Response {
  """
  Uniquely identifies this remediation. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given remediation across revisions.
  """
  uuid: String!

  """
  Identifies whether this is a recommendation, such as from an assessor or tool,
  or an actual plan accepted by the system owner.
  """
  lifecycle: String!

  """The title for this response activity."""
  title: String!

  """A description of this response plan."""
  description: String!
  props: [Property!]
  links: [Link!]
  origins: [Origin!]
  required_assets: [ResponseRequiredAssetsItem!]
  tasks: [Task!]
  remarks: String
}

"""
Describes either recommended or an actual plan for addressing the risk.
"""
input ResponseIn {
  """
  Uniquely identifies this remediation. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given remediation across revisions.
  """
  uuid: String!

  """
  Identifies whether this is a recommendation, such as from an assessor or tool,
  or an actual plan accepted by the system owner.
  """
  lifecycle: String!

  """The title for this response activity."""
  title: String!

  """A description of this response plan."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  origins: [OriginIn!]
  required_assets: [ResponseRequiredAssetsItemIn!]
  tasks: [TaskIn!]
  remarks: String
}

"""Identifies an asset required to achieve remediation."""
type ResponseRequiredAssetsItem {
  """
  Uniquely identifies this required asset. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given required asset across revisions.
  """
  uuid: String!
  subjects: [SubjectReference!]

  """The title for this required asset."""
  title: String

  """A description of this required asset."""
  description: String!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""Identifies an asset required to achieve remediation."""
input ResponseRequiredAssetsItemIn {
  """
  Uniquely identifies this required asset. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given required asset across revisions.
  """
  uuid: String!
  subjects: [SubjectReferenceIn!]

  """The title for this required asset."""
  title: String

  """A description of this required asset."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
A reference to a set of organizations or persons that have responsibility for
performing a referenced role in the context of the containing object.
"""
type ResponsibleParty {
  """The role that the party is responsible for."""
  role_id: String!
  party_uuids: [String!]!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
A reference to a set of organizations or persons that have responsibility for
performing a referenced role in the context of the containing object.
"""
input ResponsiblePartyIn {
  """The role that the party is responsible for."""
  role_id: String!
  party_uuids: [String!]!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
A reference to one or more roles with responsibility for performing a function relative to the containing object.
"""
type ResponsibleRole {
  """The role that is responsible for the business function."""
  role_id: String!
  props: [Property!]
  links: [Link!]
  party_uuids: [String!]
  remarks: String
}

"""
A reference to one or more roles with responsibility for performing a function relative to the containing object.
"""
input ResponsibleRoleIn {
  """The role that is responsible for the business function."""
  role_id: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  party_uuids: [String!]
  remarks: String
}

"""
Used by the assessment results and POA&M. In the assessment results, this
identifies all of the assessment observations and findings, initial and residual
risks, deviations, and disposition. In the POA&M, this identifies initial and
residual risks, deviations, and disposition.
"""
type Result {
  """
  Uniquely identifies this set of results. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given set of results across revisions.
  """
  uuid: String!

  """The title for this set of results."""
  title: String!

  """A description of this set of test results."""
  description: String!

  """
  Date/time stamp identifying the start of the evidence collection reflected in these results.
  """
  start: String!

  """
  Date/time stamp identifying the end of the evidence collection reflected in
  these results. In a continuous motoring scenario, this may contain the same
  value as start if appropriate.
  """
  end: String
  prop: [Property!]
  links: [Link!]

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: ResultLocals
  reviewed_controls: ReviewedControls!
  attestations: [ResultAttestationsItem!]

  """A log of all assessment_related actions taken."""
  assessment_log: ResultAssessmentLog
  observations: [Observation!]
  risks: [Risk!]
  findings: [Finding!]
  remarks: String
}

"""A log of all assessment_related actions taken."""
type ResultAssessmentLog {
  entries: [ResultAssessmentLogEntriesItem!]!
}

"""
Identifies the result of an action and/or task that occurred as part of
executing an assessment plan or an assessment event that occurred in producing
the assessment results.
"""
type ResultAssessmentLogEntriesItem {
  """
  Uniquely identifies an assessment event. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. A UUID should be
  consistently used for this schedule across revisions of the document.
  """
  uuid: String!

  """The title for this event."""
  title: String

  """A description of this event."""
  description: String

  """Identifies the start date and time of an event."""
  start: String!

  """
  Identifies the end date and time of an event. If the event is a point in time,
  the start and end will be the same date and time.
  """
  end: String
  props: [Property!]
  links: [Link!]
  logged_by: [LoggedBy!]
  related_tasks: [RelatedTask!]
  remarks: String
}

"""
Identifies the result of an action and/or task that occurred as part of
executing an assessment plan or an assessment event that occurred in producing
the assessment results.
"""
input ResultAssessmentLogEntriesItemIn {
  """
  Uniquely identifies an assessment event. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. A UUID should be
  consistently used for this schedule across revisions of the document.
  """
  uuid: String!

  """The title for this event."""
  title: String

  """A description of this event."""
  description: String

  """Identifies the start date and time of an event."""
  start: String!

  """
  Identifies the end date and time of an event. If the event is a point in time,
  the start and end will be the same date and time.
  """
  end: String
  props: [PropertyIn!]
  links: [LinkIn!]
  logged_by: [LoggedByIn!]
  related_tasks: [RelatedTaskIn!]
  remarks: String
}

"""A log of all assessment_related actions taken."""
input ResultAssessmentLogIn {
  entries: [ResultAssessmentLogEntriesItemIn!]!
}

"""A set of textual statements, typically written by the assessor."""
type ResultAttestationsItem {
  responsible_parties: [ResponsibleParty!]
  parts: [AssessmentPart!]!
}

"""A set of textual statements, typically written by the assessor."""
input ResultAttestationsItemIn {
  responsible_parties: [ResponsiblePartyIn!]
  parts: [AssessmentPartIn!]!
}

"""
Used by the assessment results and POA&M. In the assessment results, this
identifies all of the assessment observations and findings, initial and residual
risks, deviations, and disposition. In the POA&M, this identifies initial and
residual risks, deviations, and disposition.
"""
input ResultIn {
  """
  Uniquely identifies this set of results. This UUID may be referenced elsewhere
  in an OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given set of results across revisions.
  """
  uuid: String!

  """The title for this set of results."""
  title: String!

  """A description of this set of test results."""
  description: String!

  """
  Date/time stamp identifying the start of the evidence collection reflected in these results.
  """
  start: String!

  """
  Date/time stamp identifying the end of the evidence collection reflected in
  these results. In a continuous motoring scenario, this may contain the same
  value as start if appropriate.
  """
  end: String
  prop: [PropertyIn!]
  links: [LinkIn!]

  """
  Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
  """
  local_definitions: ResultLocalsIn
  reviewed_controls: ReviewedControlsIn!
  attestations: [ResultAttestationsItemIn!]

  """A log of all assessment_related actions taken."""
  assessment_log: ResultAssessmentLogIn
  observations: [ObservationIn!]
  risks: [RiskIn!]
  findings: [FindingIn!]
  remarks: String
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
type ResultLocals {
  components: [SystemComponent!]
  inventory_items: [InventoryItem!]
  users: [SystemUser!]
  assessment_assets: AssessmentAssets
  tasks: [Task!]
}

"""
Used to define data objects that are used in the assessment plan, that do not appear in the referenced SSP.
"""
input ResultLocalsIn {
  components: [SystemComponentIn!]
  inventory_items: [InventoryItemIn!]
  users: [SystemUserIn!]
  assessment_assets: AssessmentAssetsIn
  tasks: [TaskIn!]
}

"""Identifies the controls being assessed and their control objectives."""
type ReviewedControls {
  """A description of control objectives."""
  description: String
  props: [Property!]
  links: [Link!]
  control_selections: [ReviewedControlsControlSelectionsItem!]!
  control_objective_selections: [ReviewedControlsControlObjectiveSelectionsItem!]
  remarks: String
}

"""
Identifies the control objectives of the assessment. In the assessment plan,
these are the planned objectives. In the assessment results, these are the
assessed objectives, and reflects any changes from the plan.
"""
type ReviewedControlsControlObjectiveSelectionsItem {
  """A description of this collection of control objectives."""
  description: String
  props: [Property!]
  links: [Link!]

  """A key word to indicate all."""
  include_all: ReviewedControlsControlObjectiveSelectionsItemIncludeAll
  include_objectives: [SelectObjectiveById!]
  exclude_objectives: [SelectObjectiveById!]
  remarks: String
}

"""
Identifies the control objectives of the assessment. In the assessment plan,
these are the planned objectives. In the assessment results, these are the
assessed objectives, and reflects any changes from the plan.
"""
input ReviewedControlsControlObjectiveSelectionsItemIn {
  """A description of this collection of control objectives."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """A key word to indicate all."""
  include_all: ReviewedControlsControlObjectiveSelectionsItemIncludeAllIn
  include_objectives: [SelectObjectiveByIdIn!]
  exclude_objectives: [SelectObjectiveByIdIn!]
  remarks: String
}

"""A key word to indicate all."""
type ReviewedControlsControlObjectiveSelectionsItemIncludeAll {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""A key word to indicate all."""
input ReviewedControlsControlObjectiveSelectionsItemIncludeAllIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""
Identifies the controls being assessed. In the assessment plan, these are the
planned controls. In the assessment results, these are the actual controls, and
reflects any changes from the plan.
"""
type ReviewedControlsControlSelectionsItem {
  """
  A description of in_scope controls specified for assessment.
  """
  description: String
  props: [Property!]
  links: [Link!]

  """A key word to indicate all."""
  include_all: ReviewedControlsControlSelectionsItemIncludeAll
  include_controls: [SelectControlById!]
  exclude_controls: [SelectControlById!]
  remarks: String
}

"""
Identifies the controls being assessed. In the assessment plan, these are the
planned controls. In the assessment results, these are the actual controls, and
reflects any changes from the plan.
"""
input ReviewedControlsControlSelectionsItemIn {
  """
  A description of in_scope controls specified for assessment.
  """
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """A key word to indicate all."""
  include_all: ReviewedControlsControlSelectionsItemIncludeAllIn
  include_controls: [SelectControlByIdIn!]
  exclude_controls: [SelectControlByIdIn!]
  remarks: String
}

"""A key word to indicate all."""
type ReviewedControlsControlSelectionsItemIncludeAll {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""A key word to indicate all."""
input ReviewedControlsControlSelectionsItemIncludeAllIn {
  _typesWithoutFieldsAreNotAllowed_: String
}

"""Identifies the controls being assessed and their control objectives."""
input ReviewedControlsIn {
  """A description of control objectives."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  control_selections: [ReviewedControlsControlSelectionsItemIn!]!
  control_objective_selections: [ReviewedControlsControlObjectiveSelectionsItemIn!]
  remarks: String
}

"""
An entry in a sequential list of revisions to the containing document in reverse
chronological order (i.e., most recent previous revision first).
"""
type Revision {
  """
  A name given to the document revision, which may be used by a tool for display and navigation.
  """
  title: String
  published: String
  last_modified: String
  version: String
  oscal_version: String
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
An entry in a sequential list of revisions to the containing document in reverse
chronological order (i.e., most recent previous revision first).
"""
input RevisionIn {
  """
  A name given to the document revision, which may be used by a tool for display and navigation.
  """
  title: String
  published: String
  last_modified: String
  version: String
  oscal_version: String
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""An identified risk."""
type Risk {
  """
  Uniquely identifies this risk. This UUID may be referenced elsewhere in an
  OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given risk across revisions.
  """
  uuid: String!

  """The title for this risk."""
  title: String!

  """
  A summary of the identified risk, to include a statement of how the risk impacts the system.
  """
  description: String!

  """An summary of impact for how the risk affects the system."""
  statement: String!
  props: [Property!]
  links: [Link!]

  """Describes the status of the associated risk."""
  status: String!
  origins: [Origin!]
  threat_ids: [ThreatId!]
  characterizations: [Characterization!]
  mitigating_factors: [RiskMitigatingFactorsItem!]

  """The date/time by which the risk must be resolved."""
  deadline: String
  remediations: [Response!]

  """A log of all risk_related tasks taken."""
  risk_log: RiskRiskLog
  related_observations: [RiskRelatedObservationsItem!]
}

"""An identified risk."""
input RiskIn {
  """
  Uniquely identifies this risk. This UUID may be referenced elsewhere in an
  OSCAL document when referring to this information. Once assigned, a UUID
  should be consistently used for a given risk across revisions.
  """
  uuid: String!

  """The title for this risk."""
  title: String!

  """
  A summary of the identified risk, to include a statement of how the risk impacts the system.
  """
  description: String!

  """An summary of impact for how the risk affects the system."""
  statement: String!
  props: [PropertyIn!]
  links: [LinkIn!]

  """Describes the status of the associated risk."""
  status: String!
  origins: [OriginIn!]
  threat_ids: [ThreatIdIn!]
  characterizations: [CharacterizationIn!]
  mitigating_factors: [RiskMitigatingFactorsItemIn!]

  """The date/time by which the risk must be resolved."""
  deadline: String
  remediations: [ResponseIn!]

  """A log of all risk_related tasks taken."""
  risk_log: RiskRiskLogIn
  related_observations: [RiskRelatedObservationsItemIn!]
}

"""
Describes an existing mitigating factor that may affect the overall
determination of the risk, with an optional link to an implementation statement in the SSP.
"""
type RiskMitigatingFactorsItem {
  """
  Uniquely identifies this mitigating factor. This UUID may be referenced
  elsewhere in an OSCAL document when referring to this information. Once
  assigned, a UUID should be consistently used for a given mitigating factor
  across revisions.
  """
  uuid: String!

  """Points to an implementation statement in the SSP."""
  implementation_uuid: String

  """A description of this mitigating factor."""
  description: String!
  props: [Property!]
  links: [Link!]
  subjects: [SubjectReference!]
}

"""
Describes an existing mitigating factor that may affect the overall
determination of the risk, with an optional link to an implementation statement in the SSP.
"""
input RiskMitigatingFactorsItemIn {
  """
  Uniquely identifies this mitigating factor. This UUID may be referenced
  elsewhere in an OSCAL document when referring to this information. Once
  assigned, a UUID should be consistently used for a given mitigating factor
  across revisions.
  """
  uuid: String!

  """Points to an implementation statement in the SSP."""
  implementation_uuid: String

  """A description of this mitigating factor."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  subjects: [SubjectReferenceIn!]
}

"""
Relates the finding to a set of referenced observations that were used to determine the finding.
"""
type RiskRelatedObservationsItem {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""
Relates the finding to a set of referenced observations that were used to determine the finding.
"""
input RiskRelatedObservationsItemIn {
  """References an observation defined in the list of observations."""
  observation_uuid: String!
}

"""A log of all risk_related tasks taken."""
type RiskRiskLog {
  entries: [RiskRiskLogEntriesItem!]!
}

"""
Identifies an individual risk response that occurred as part of managing an identified risk.
"""
type RiskRiskLogEntriesItem {
  """
  Uniquely identifies a risk log entry. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. A UUID should be
  consistently used for this schedule across revisions of the document.
  """
  uuid: String!

  """The title for this risk log entry."""
  title: String

  """A description of what was done regarding the risk."""
  description: String

  """Identifies the start date and time of the event."""
  start: String!

  """
  Identifies the end date and time of the event. If the event is a point in
  time, the start and end will be the same date and time.
  """
  end: String
  props: [Property!]
  links: [Link!]
  logged_by: [LoggedBy!]
  status_change: String
  related_responses: [RiskRiskLogEntriesItemRelatedResponsesItem!]
  remarks: String
}

"""
Identifies an individual risk response that occurred as part of managing an identified risk.
"""
input RiskRiskLogEntriesItemIn {
  """
  Uniquely identifies a risk log entry. This UUID may be referenced elsewhere in
  an OSCAL document when referring to this information. A UUID should be
  consistently used for this schedule across revisions of the document.
  """
  uuid: String!

  """The title for this risk log entry."""
  title: String

  """A description of what was done regarding the risk."""
  description: String

  """Identifies the start date and time of the event."""
  start: String!

  """
  Identifies the end date and time of the event. If the event is a point in
  time, the start and end will be the same date and time.
  """
  end: String
  props: [PropertyIn!]
  links: [LinkIn!]
  logged_by: [LoggedByIn!]
  status_change: String
  related_responses: [RiskRiskLogEntriesItemRelatedResponsesItemIn!]
  remarks: String
}

"""Identifies an individual risk response that this log entry is for."""
type RiskRiskLogEntriesItemRelatedResponsesItem {
  """References a unique risk response by UUID."""
  response_uuid: String!
  props: [Property!]
  links: [Link!]
  related_tasks: [RelatedTask!]
  remarks: String
}

"""Identifies an individual risk response that this log entry is for."""
input RiskRiskLogEntriesItemRelatedResponsesItemIn {
  """References a unique risk response by UUID."""
  response_uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  related_tasks: [RelatedTaskIn!]
  remarks: String
}

"""A log of all risk_related tasks taken."""
input RiskRiskLogIn {
  entries: [RiskRiskLogEntriesItemIn!]!
}

"""
Defines a function assumed or expected to be assumed by a party in a specific situation.
"""
type Role {
  """
  A unique identifier for a specific role instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same role across
  minor revisions of the document.
  """
  id: String!

  """
  A name given to the role, which may be used by a tool for display and navigation.
  """
  title: String!

  """A short common name, abbreviation, or acronym for the role."""
  short_name: String

  """A summary of the role's purpose and associated responsibilities."""
  description: String
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
Defines a function assumed or expected to be assumed by a party in a specific situation.
"""
input RoleIn {
  """
  A unique identifier for a specific role instance. This identifier's uniqueness
  is document scoped and is intended to be consistent for the same role across
  minor revisions of the document.
  """
  id: String!

  """
  A name given to the role, which may be used by a tool for display and navigation.
  """
  title: String!

  """A short common name, abbreviation, or acronym for the role."""
  short_name: String

  """A summary of the role's purpose and associated responsibilities."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
The overall level of expected impact resulting from unauthorized disclosure, modification, or loss of access to information.
"""
type SecurityImpactLevel {
  """
  A target_level of confidentiality for the system, based on the sensitivity of information within the system.
  """
  security_objective_confidentiality: String!

  """
  A target_level of integrity for the system, based on the sensitivity of information within the system.
  """
  security_objective_integrity: String!

  """
  A target_level of availability for the system, based on the sensitivity of information within the system.
  """
  security_objective_availability: String!
}

"""
The overall level of expected impact resulting from unauthorized disclosure, modification, or loss of access to information.
"""
input SecurityImpactLevelIn {
  """
  A target_level of confidentiality for the system, based on the sensitivity of information within the system.
  """
  security_objective_confidentiality: String!

  """
  A target_level of integrity for the system, based on the sensitivity of information within the system.
  """
  security_objective_integrity: String!

  """
  A target_level of availability for the system, based on the sensitivity of information within the system.
  """
  security_objective_availability: String!
}

"""
Used to select a control for inclusion/exclusion based on one or more control
identifiers. A set of statement identifiers can be used to target the
inclusion/exclusion to only specific control statements providing more
granularity over the specific statements that are within the asessment scope.
"""
type SelectControlById {
  """A reference to a control with a corresponding id value."""
  control_id: String!
  statement_ids: [String!]
}

"""
Used to select a control for inclusion/exclusion based on one or more control
identifiers. A set of statement identifiers can be used to target the
inclusion/exclusion to only specific control statements providing more
granularity over the specific statements that are within the asessment scope.
"""
input SelectControlByIdIn {
  """A reference to a control with a corresponding id value."""
  control_id: String!
  statement_ids: [String!]
}

"""
Used to select a control objective for inclusion/exclusion based on the control objective's identifier.
"""
type SelectObjectiveById {
  """Points to an assessment objective."""
  objective_id: String!
}

"""
Used to select a control objective for inclusion/exclusion based on the control objective's identifier.
"""
input SelectObjectiveByIdIn {
  """Points to an assessment objective."""
  objective_id: String!
}

"""Identifies a set of assessment subjects to include/exclude by UUID."""
type SelectSubjectById {
  """
  A pointer to a component, inventory_item, location, party, user, or resource using it's UUID.
  """
  subject_uuid: String!

  """
  Used to indicate the type of object pointed to by the uuid_ref within a subject.
  """
  type: String!
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""Identifies a set of assessment subjects to include/exclude by UUID."""
input SelectSubjectByIdIn {
  """
  A pointer to a component, inventory_item, location, party, user, or resource using it's UUID.
  """
  subject_uuid: String!

  """
  Used to indicate the type of object pointed to by the uuid_ref within a subject.
  """
  type: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""Identifies the parameter that will be set by the enclosed value."""
type SetParameter {
  """
  A reference to a parameter within a control, who's catalog has been imported into the current implementation context.
  """
  param_id: String!
  values: [String!]!
  remarks: String
}

"""Identifies the parameter that will be set by the enclosed value."""
input SetParameterIn {
  """
  A reference to a parameter within a control, who's catalog has been imported into the current implementation context.
  """
  param_id: String!
  values: [String!]!
  remarks: String
}

"""Identifies which statements within a control are addressed."""
type Statement {
  """A reference to a control statement by its identifier"""
  statement_id: String!

  """
  A globally unique identifier that can be used to reference this control
  statement entry elsewhere in an OSCAL document. A UUID should be consistently
  used for a given resource across revisions of the document.
  """
  uuid: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  by_components: [ByComponent!]
  remarks: String
}

"""Identifies which statements within a control are addressed."""
input StatementIn {
  """A reference to a control statement by its identifier"""
  statement_id: String!

  """
  A globally unique identifier that can be used to reference this control
  statement entry elsewhere in an OSCAL document. A UUID should be consistently
  used for a given resource across revisions of the document.
  """
  uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  by_components: [ByComponentIn!]
  remarks: String
}

"""Describes the operational status of the system."""
type Status {
  """The current operating status."""
  state: StatusState!
  remarks: String
}

"""Describes the operational status of the system."""
input StatusIn {
  """The current operating status."""
  state: StatusState!
  remarks: String
}

enum StatusState {
  operational
  under_development
  under_major_modification
  disposition
  other
}

"""
A pointer to a resource based on its universally unique identifier (UUID). Use
type to indicate whether the identified resource is a component, inventory item,
location, user, or something else.
"""
type SubjectReference {
  """
  A pointer to a component, inventory_item, location, party, user, or resource using it's UUID.
  """
  subject_uuid: String!

  """
  Used to indicate the type of object pointed to by the uuid_ref within a subject.
  """
  type: String!

  """The title or name for the referenced subject."""
  title: String
  props: [Property!]
  links: [Link!]
  remarks: String
}

"""
A pointer to a resource based on its universally unique identifier (UUID). Use
type to indicate whether the identified resource is a component, inventory item,
location, user, or something else.
"""
input SubjectReferenceIn {
  """
  A pointer to a component, inventory_item, location, party, user, or resource using it's UUID.
  """
  subject_uuid: String!

  """
  Used to indicate the type of object pointed to by the uuid_ref within a subject.
  """
  type: String!

  """The title or name for the referenced subject."""
  title: String
  props: [PropertyIn!]
  links: [LinkIn!]
  remarks: String
}

"""
Contains the characteristics of the system, such as its name, purpose, and security impact level.
"""
type SystemCharacteristics {
  system_ids: [SystemId!]!

  """The full name of the system."""
  system_name: String!

  """
  A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.
  """
  system_name_short: String

  """A summary of the system."""
  description: String!
  props: [Property!]
  links: [Link!]
  date_authorized: String

  """
  The overall information system sensitivity categorization, such as defined by FIPS_199.
  """
  security_sensitivity_level: String!
  system_information: SystemInformation!
  security_impact_level: SecurityImpactLevel!
  status: Status!
  authorization_boundary: AuthorizationBoundary!
  network_architecture: NetworkArchitecture
  data_flow: DataFlow
  responsible_parties: [ResponsibleParty!]
  remarks: String
}

"""
Contains the characteristics of the system, such as its name, purpose, and security impact level.
"""
input SystemCharacteristicsIn {
  system_ids: [SystemIdIn!]!

  """The full name of the system."""
  system_name: String!

  """
  A short name for the system, such as an acronym, that is suitable for display in a data table or summary list.
  """
  system_name_short: String

  """A summary of the system."""
  description: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  date_authorized: String

  """
  The overall information system sensitivity categorization, such as defined by FIPS_199.
  """
  security_sensitivity_level: String!
  system_information: SystemInformationIn!
  security_impact_level: SecurityImpactLevelIn!
  status: StatusIn!
  authorization_boundary: AuthorizationBoundaryIn!
  network_architecture: NetworkArchitectureIn
  data_flow: DataFlowIn
  responsible_parties: [ResponsiblePartyIn!]
  remarks: String
}

"""A defined component that can be part of an implemented system."""
type SystemComponent {
  """The unique identifier for the component."""
  uuid: String!

  """A category describing the purpose of the component."""
  type: String!

  """A human readable name for the system component."""
  title: String!

  """
  A description of the component, including information about its function.
  """
  description: String!

  """A summary of the technological or business purpose of the component."""
  purpose: String
  props: [Property!]
  links: [Link!]

  """Describes the operational status of the system component."""
  status: SystemComponentStatus!
  responsible_roles: [ResponsibleRole!]
  protocols: [Protocol!]
  remarks: String
}

"""A defined component that can be part of an implemented system."""
input SystemComponentIn {
  """The unique identifier for the component."""
  uuid: String!

  """A category describing the purpose of the component."""
  type: String!

  """A human readable name for the system component."""
  title: String!

  """
  A description of the component, including information about its function.
  """
  description: String!

  """A summary of the technological or business purpose of the component."""
  purpose: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """Describes the operational status of the system component."""
  status: SystemComponentStatusIn!
  responsible_roles: [ResponsibleRoleIn!]
  protocols: [ProtocolIn!]
  remarks: String
}

"""Describes the operational status of the system component."""
type SystemComponentStatus {
  """The operational status."""
  state: SystemComponentStatusState!
  remarks: String
}

"""Describes the operational status of the system component."""
input SystemComponentStatusIn {
  """The operational status."""
  state: SystemComponentStatusState!
  remarks: String
}

enum SystemComponentStatusState {
  under_development
  operational
  disposition
  other
}

"""
A unique identifier for the system described by this system security plan.
"""
type SystemId {
  """
  Identifies the identification system from which the provided identifier was assigned.
  """
  identifier_type: String
  id: String!
}

"""
A unique identifier for the system described by this system security plan.
"""
input SystemIdIn {
  """
  Identifies the identification system from which the provided identifier was assigned.
  """
  identifier_type: String
  id: String!
}

"""Provides information as to how the system is implemented."""
type SystemImplementation {
  props: [Property!]
  links: [Link!]
  leveraged_authorizations: [SystemImplementationLeveragedAuthorizationsItem!]
  users: [SystemUser!]!
  components: [SystemComponent!]!
  inventory_items: [InventoryItem!]
  remarks: String
}

"""Provides information as to how the system is implemented."""
input SystemImplementationIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  leveraged_authorizations: [SystemImplementationLeveragedAuthorizationsItemIn!]
  users: [SystemUserIn!]!
  components: [SystemComponentIn!]!
  inventory_items: [InventoryItemIn!]
  remarks: String
}

"""
A description of another authorized system from which this system inherits
capabilities that satisfy security requirements. Another term for this concept
is a common control provider.
"""
type SystemImplementationLeveragedAuthorizationsItem {
  """
  A globally unique identifier that can be used to reference this leveraged
  authorization entry elsewhere in an OSCAL document. A UUID should be
  consistently used for a given resource across revisions of the document.
  """
  uuid: String!

  """
  A human readable name for the leveraged authorization in the context of the system.
  """
  title: String!
  props: [Property!]
  links: [Link!]

  """A reference to the party that manages the leveraged system."""
  party_uuid: String!
  date_authorized: String!
  remarks: String
}

"""
A description of another authorized system from which this system inherits
capabilities that satisfy security requirements. Another term for this concept
is a common control provider.
"""
input SystemImplementationLeveragedAuthorizationsItemIn {
  """
  A globally unique identifier that can be used to reference this leveraged
  authorization entry elsewhere in an OSCAL document. A UUID should be
  consistently used for a given resource across revisions of the document.
  """
  uuid: String!

  """
  A human readable name for the leveraged authorization in the context of the system.
  """
  title: String!
  props: [PropertyIn!]
  links: [LinkIn!]

  """A reference to the party that manages the leveraged system."""
  party_uuid: String!
  date_authorized: String!
  remarks: String
}

"""
Contains details about all information types that are stored, processed, or
transmitted by the system, such as privacy information, and those defined in
NIST SP 800_60.
"""
type SystemInformation {
  props: [Property!]
  links: [Link!]
  information_types: [SystemInformationInformationTypesItem!]!
}

"""
Contains details about all information types that are stored, processed, or
transmitted by the system, such as privacy information, and those defined in
NIST SP 800_60.
"""
input SystemInformationIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  information_types: [SystemInformationInformationTypesItemIn!]!
}

"""
Contains details about one information type that is stored, processed, or
transmitted by the system, such as privacy information, and those defined in
NIST SP 800_60.
"""
type SystemInformationInformationTypesItem {
  """
  A globally unique identifier that can be used to reference this information
  type entry elsewhere in an OSCAL document. A UUID should be consistently used
  for a given resource across revisions of the document.
  """
  uuid: String

  """
  A human readable name for the information type. This title should be meaningful within the context of the system.
  """
  title: String!

  """A summary of how this information type is used within the system."""
  description: String!
  categorizations: [SystemInformationInformationTypesItemCategorizationsItem!]
  props: [Property!]
  links: [Link!]

  """
  The expected level of impact resulting from the unauthorized disclosure of the described information.
  """
  confidentiality_impact: SystemInformationInformationTypesItemConfidentialityImpact!

  """
  The expected level of impact resulting from the unauthorized modification of the described information.
  """
  integrity_impact: SystemInformationInformationTypesItemIntegrityImpact!

  """
  The expected level of impact resulting from the disruption of access to or use
  of the described information or the information system.
  """
  availability_impact: SystemInformationInformationTypesItemAvailabilityImpact!
}

"""
The expected level of impact resulting from the disruption of access to or use
of the described information or the information system.
"""
type SystemInformationInformationTypesItemAvailabilityImpact {
  props: [Property!]
  links: [Link!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""
The expected level of impact resulting from the disruption of access to or use
of the described information or the information system.
"""
input SystemInformationInformationTypesItemAvailabilityImpactIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""
A set of information type identifiers qualified by the given identification system used, such as NIST SP 800_60.
"""
type SystemInformationInformationTypesItemCategorizationsItem {
  """Specifies the information type identification system used."""
  system: String!
  information_type_ids: [String!]
}

"""
A set of information type identifiers qualified by the given identification system used, such as NIST SP 800_60.
"""
input SystemInformationInformationTypesItemCategorizationsItemIn {
  """Specifies the information type identification system used."""
  system: String!
  information_type_ids: [String!]
}

"""
The expected level of impact resulting from the unauthorized disclosure of the described information.
"""
type SystemInformationInformationTypesItemConfidentialityImpact {
  props: [Property!]
  links: [Link!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""
The expected level of impact resulting from the unauthorized disclosure of the described information.
"""
input SystemInformationInformationTypesItemConfidentialityImpactIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""
Contains details about one information type that is stored, processed, or
transmitted by the system, such as privacy information, and those defined in
NIST SP 800_60.
"""
input SystemInformationInformationTypesItemIn {
  """
  A globally unique identifier that can be used to reference this information
  type entry elsewhere in an OSCAL document. A UUID should be consistently used
  for a given resource across revisions of the document.
  """
  uuid: String

  """
  A human readable name for the information type. This title should be meaningful within the context of the system.
  """
  title: String!

  """A summary of how this information type is used within the system."""
  description: String!
  categorizations: [SystemInformationInformationTypesItemCategorizationsItemIn!]
  props: [PropertyIn!]
  links: [LinkIn!]

  """
  The expected level of impact resulting from the unauthorized disclosure of the described information.
  """
  confidentiality_impact: SystemInformationInformationTypesItemConfidentialityImpactIn!

  """
  The expected level of impact resulting from the unauthorized modification of the described information.
  """
  integrity_impact: SystemInformationInformationTypesItemIntegrityImpactIn!

  """
  The expected level of impact resulting from the disruption of access to or use
  of the described information or the information system.
  """
  availability_impact: SystemInformationInformationTypesItemAvailabilityImpactIn!
}

"""
The expected level of impact resulting from the unauthorized modification of the described information.
"""
type SystemInformationInformationTypesItemIntegrityImpact {
  props: [Property!]
  links: [Link!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""
The expected level of impact resulting from the unauthorized modification of the described information.
"""
input SystemInformationInformationTypesItemIntegrityImpactIn {
  props: [PropertyIn!]
  links: [LinkIn!]
  base: String!
  selected: String
  adjustment_justification: String
}

"""A system security plan, such as those described in NIST SP 800_18"""
type SystemSecurityPlan {
  """
  A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: Metadata!
  import_profile: ImportProfile!
  system_characteristics: SystemCharacteristics!
  system_implementation: SystemImplementation!
  control_implementation: ControlImplementation!
  back_matter: BackMatter
}

"""A system security plan, such as those described in NIST SP 800_18"""
input SystemSecurityPlanIn {
  """
  A globally unique identifier for this catalog instance. This UUID should be changed when this document is revised.
  """
  uuid: String!
  metadata: MetadataIn!
  import_profile: ImportProfileIn!
  system_characteristics: SystemCharacteristicsIn!
  system_implementation: SystemImplementationIn!
  control_implementation: ControlImplementationIn!
  back_matter: BackMatterIn
}

"""
A type of user that interacts with the system based on an associated role.
"""
type SystemUser {
  """The unique identifier for the user class."""
  uuid: String!

  """
  A name given to the user, which may be used by a tool for display and navigation.
  """
  title: String

  """A short common name, abbreviation, or acronym for the user."""
  short_name: String

  """A summary of the user's purpose within the system."""
  description: String
  props: [Property!]
  links: [Link!]
  role_ids: [String!]
  authorized_privileges: [AuthorizedPrivilege!]
  remarks: String
}

"""
A type of user that interacts with the system based on an associated role.
"""
input SystemUserIn {
  """The unique identifier for the user class."""
  uuid: String!

  """
  A name given to the user, which may be used by a tool for display and navigation.
  """
  title: String

  """A short common name, abbreviation, or acronym for the user."""
  short_name: String

  """A summary of the user's purpose within the system."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]
  role_ids: [String!]
  authorized_privileges: [AuthorizedPrivilegeIn!]
  remarks: String
}

"""
Represents a scheduled event or milestone, which may be associated with a series of assessment actions.
"""
type Task {
  """Uniquely identifies this assessment task."""
  uuid: String!

  """The type of task."""
  type: String!

  """The title for this task."""
  title: String!

  """A description of this task."""
  description: String
  props: [Property!]
  links: [Link!]

  """The timing under which the task is intended to occur."""
  timing: TaskTiming
  dependencies: [TaskDependenciesItem!]
  tasks: [Task!]
  associated_activities: [TaskAssociatedActivitiesItem!]
  subjects: [AssessmentSubject!]
  responsible_roles: [ResponsibleRole!]
  remarks: String
}

"""Identifies an individual activity to be performed as part of a task."""
type TaskAssociatedActivitiesItem {
  """References an activity defined in the list of activities."""
  activity_uuid: String!
  props: [Property!]
  links: [Link!]
  responsible_roles: [ResponsibleRole!]
  subjects: [AssessmentSubject!]!
  remarks: String
}

"""Identifies an individual activity to be performed as part of a task."""
input TaskAssociatedActivitiesItemIn {
  """References an activity defined in the list of activities."""
  activity_uuid: String!
  props: [PropertyIn!]
  links: [LinkIn!]
  responsible_roles: [ResponsibleRoleIn!]
  subjects: [AssessmentSubjectIn!]!
  remarks: String
}

"""Used to indicate that a task is dependent on another task."""
type TaskDependenciesItem {
  """References a unique task by UUID."""
  task_uuid: String!
  remarks: String
}

"""Used to indicate that a task is dependent on another task."""
input TaskDependenciesItemIn {
  """References a unique task by UUID."""
  task_uuid: String!
  remarks: String
}

"""
Represents a scheduled event or milestone, which may be associated with a series of assessment actions.
"""
input TaskIn {
  """Uniquely identifies this assessment task."""
  uuid: String!

  """The type of task."""
  type: String!

  """The title for this task."""
  title: String!

  """A description of this task."""
  description: String
  props: [PropertyIn!]
  links: [LinkIn!]

  """The timing under which the task is intended to occur."""
  timing: TaskTimingIn
  dependencies: [TaskDependenciesItemIn!]
  tasks: [TaskIn!]
  associated_activities: [TaskAssociatedActivitiesItemIn!]
  subjects: [AssessmentSubjectIn!]
  responsible_roles: [ResponsibleRoleIn!]
  remarks: String
}

"""The timing under which the task is intended to occur."""
type TaskTiming {
  """The task is intended to occur on the specified date."""
  on_date: TaskTimingOnDate

  """The task is intended to occur within the specified date range."""
  within_date_range: TaskTimingWithinDateRange

  """The task is intended to occur at the specified frequency."""
  at_frequency: TaskTimingAtFrequency
}

"""The task is intended to occur at the specified frequency."""
type TaskTimingAtFrequency {
  """The task must occur after the specified period has elapsed."""
  period: Int!

  """The unit of time for the period."""
  unit: TaskTimingAtFrequencyUnit!
}

"""The task is intended to occur at the specified frequency."""
input TaskTimingAtFrequencyIn {
  """The task must occur after the specified period has elapsed."""
  period: Int!

  """The unit of time for the period."""
  unit: TaskTimingAtFrequencyUnit!
}

enum TaskTimingAtFrequencyUnit {
  seconds
  minutes
  hours
  days
  months
  years
}

"""The timing under which the task is intended to occur."""
input TaskTimingIn {
  """The task is intended to occur on the specified date."""
  on_date: TaskTimingOnDateIn

  """The task is intended to occur within the specified date range."""
  within_date_range: TaskTimingWithinDateRangeIn

  """The task is intended to occur at the specified frequency."""
  at_frequency: TaskTimingAtFrequencyIn
}

"""The task is intended to occur on the specified date."""
type TaskTimingOnDate {
  """The task must occur on the specified date."""
  date: String!
}

"""The task is intended to occur on the specified date."""
input TaskTimingOnDateIn {
  """The task must occur on the specified date."""
  date: String!
}

"""The task is intended to occur within the specified date range."""
type TaskTimingWithinDateRange {
  """The task must occur on or after the specified date."""
  start: String!

  """The task must occur on or before the specified date."""
  end: String!
}

"""The task is intended to occur within the specified date range."""
input TaskTimingWithinDateRangeIn {
  """The task must occur on or after the specified date."""
  start: String!

  """The task must occur on or before the specified date."""
  end: String!
}

"""Contact number by telephone."""
type TelephoneNumber {
  """Indicates the type of phone number."""
  type: String
  number: String!
}

"""Contact number by telephone."""
input TelephoneNumberIn {
  """Indicates the type of phone number."""
  type: String
  number: String!
}

"""A pointer, by ID, to an externally_defined threat."""
type ThreatId {
  """Specifies the source of the threat information."""
  system: String!

  """
  An optional location for the threat data, from which this ID originates.
  """
  href: String
  id: String!
}

"""A pointer, by ID, to an externally_defined threat."""
input ThreatIdIn {
  """Specifies the source of the threat information."""
  system: String!

  """
  An optional location for the threat data, from which this ID originates.
  """
  href: String
  id: String!
}

type Mutation {
  CatalogIn(input: CatalogIn): String
  GroupIn(input: GroupIn): String
  ControlIn(input: ControlIn): String
  PartIn(input: PartIn): String
  ParameterIn(input: ParameterIn): String
  ParameterConstraintIn(input: ParameterConstraintIn): String
  ParameterGuidelineIn(input: ParameterGuidelineIn): String
  ParameterValueIn(input: String): String
  ParameterSelectionIn(input: ParameterSelectionIn): String
  MetadataIn(input: MetadataIn): String
  RevisionIn(input: RevisionIn): String
  LocationIn(input: LocationIn): String
  LocationUuidIn(input: String): String
  PartyIn(input: PartyIn): String
  PartyWithNameIn(input: PartyWithNameIn): String
  PartyUuidIn(input: String): String
  RoleIn(input: RoleIn): String
  RoleIdIn(input: String): String
  ResourceIn(input: ResourceIn): String
  BackMatterIn(input: BackMatterIn): String
  PropertyIn(input: PropertyIn): String
  LinkIn(input: LinkIn): String
  ResponsiblePartyIn(input: ResponsiblePartyIn): String
  ResponsibleRoleIn(input: ResponsibleRoleIn): String
  HashIn(input: HashIn): String
  RemarksIn(input: String): String
  PublishedIn(input: String): String
  LastModifiedIn(input: String): String
  VersionIn(input: String): String
  OscalVersionIn(input: String): String
  EmailAddressIn(input: String): String
  TelephoneNumberIn(input: TelephoneNumberIn): String
  AddressIn(input: AddressIn): String
  AddrLineIn(input: String): String
  DocumentIdIn(input: DocumentIdIn): String
  ProfileIn(input: ProfileIn): String
  ImportIn(input: ImportIn): String
  MergeIn(input: MergeIn): String
  CombineIn(input: CombineIn): String
  AsIsIn(input: Boolean): String
  CustomIn(input: CustomIn): String
  ProfileGroupIn(input: ProfileGroupIn): String
  ModifyIn(input: ModifyIn): String
  InsertControlsIn(input: InsertControlsIn): String
  IncludeAllIn(input: IncludeAllIn): String
  CallIn(input: CallIn): String
  AlterIn(input: AlterIn): String
  RemoveIn(input: RemoveIn): String
  AddIn(input: AddIn): String
  ComponentIn(input: ComponentIn): String
  ImportComponentIn(input: ImportComponentIn): String
  DefinedComponentIn(input: DefinedComponentIn): String
  CapabilityIn(input: CapabilityIn): String
  IncorporatesComponentIn(input: IncorporatesComponentIn): String
  ComponentControlImplementationIn(input: ComponentControlImplementationIn): String
  ComponentImplementedRequirementIn(input: ComponentImplementedRequirementIn): String
  SystemComponentIn(input: SystemComponentIn): String
  ProtocolIn(input: ProtocolIn): String
  PortRangeIn(input: PortRangeIn): String
  ImplementationStatusIn(input: ImplementationStatusIn): String
  SystemUserIn(input: SystemUserIn): String
  AuthorizedPrivilegeIn(input: AuthorizedPrivilegeIn): String
  FunctionPerformedIn(input: String): String
  InventoryItemIn(input: InventoryItemIn): String
  SetParameterIn(input: SetParameterIn): String
  SystemIdIn(input: SystemIdIn): String
  SystemSecurityPlanIn(input: SystemSecurityPlanIn): String
  ImportProfileIn(input: ImportProfileIn): String
  SystemCharacteristicsIn(input: SystemCharacteristicsIn): String
  SystemInformationIn(input: SystemInformationIn): String
  BaseIn(input: String): String
  SelectedIn(input: String): String
  AdjustmentJustificationIn(input: String): String
  SecurityImpactLevelIn(input: SecurityImpactLevelIn): String
  StatusIn(input: StatusIn): String
  DateAuthorizedIn(input: String): String
  AuthorizationBoundaryIn(input: AuthorizationBoundaryIn): String
  DiagramIn(input: DiagramIn): String
  NetworkArchitectureIn(input: NetworkArchitectureIn): String
  DataFlowIn(input: DataFlowIn): String
  SystemImplementationIn(input: SystemImplementationIn): String
  ControlImplementationIn(input: ControlImplementationIn): String
  ImplementedRequirementIn(input: ImplementedRequirementIn): String
  StatementIn(input: StatementIn): String
  ByComponentIn(input: ByComponentIn): String
  AssessmentPlanIn(input: AssessmentPlanIn): String
  ImportSspIn(input: ImportSspIn): String
  LocalObjectiveIn(input: LocalObjectiveIn): String
  AssessmentMethodIn(input: AssessmentMethodIn): String
  ActivityIn(input: ActivityIn): String
  TaskIn(input: TaskIn): String
  ReviewedControlsIn(input: ReviewedControlsIn): String
  SelectControlByIdIn(input: SelectControlByIdIn): String
  SelectObjectiveByIdIn(input: SelectObjectiveByIdIn): String
  AssessmentSubjectPlaceholderIn(input: AssessmentSubjectPlaceholderIn): String
  AssessmentSubjectIn(input: AssessmentSubjectIn): String
  SelectSubjectByIdIn(input: SelectSubjectByIdIn): String
  SubjectReferenceIn(input: SubjectReferenceIn): String
  AssessmentAssetsIn(input: AssessmentAssetsIn): String
  AssessmentPlatformIn(input: AssessmentPlatformIn): String
  FindingTargetIn(input: FindingTargetIn): String
  ObservationIn(input: ObservationIn): String
  OriginIn(input: OriginIn): String
  OriginActorIn(input: OriginActorIn): String
  RelatedTaskIn(input: RelatedTaskIn): String
  ThreatIdIn(input: ThreatIdIn): String
  RiskIn(input: RiskIn): String
  LoggedByIn(input: LoggedByIn): String
  RiskStatusIn(input: String): String
  CharacterizationIn(input: CharacterizationIn): String
  ResponseIn(input: ResponseIn): String
  AssessmentPartIn(input: AssessmentPartIn): String
  OrganizationMissionStatementIn(input: OrganizationMissionStatementIn): String
  AssessmentResultsIn(input: AssessmentResultsIn): String
  ResultIn(input: ResultIn): String
  FindingIn(input: FindingIn): String
  ImportApIn(input: ImportApIn): String
  PlanOfActionAndMilestonesIn(input: PlanOfActionAndMilestonesIn): String
  PoamLocalsIn(input: PoamLocalsIn): String
  PoamItemIn(input: PoamItemIn): String
}



